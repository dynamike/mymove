// Code generated by go-swagger; DO NOT EDIT.

package gex

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	adminmessages "github.com/transcom/mymove/pkg/gen/adminmessages"
)

// SendGexRequestOKCode is the HTTP code returned for type SendGexRequestOK
const SendGexRequestOKCode int = 200

/*SendGexRequestOK sent request

swagger:response sendGexRequestOK
*/
type SendGexRequestOK struct {

	/*
	  In: Body
	*/
	Payload *adminmessages.GexResponse `json:"body,omitempty"`
}

// NewSendGexRequestOK creates SendGexRequestOK with default headers values
func NewSendGexRequestOK() *SendGexRequestOK {

	return &SendGexRequestOK{}
}

// WithPayload adds the payload to the send gex request o k response
func (o *SendGexRequestOK) WithPayload(payload *adminmessages.GexResponse) *SendGexRequestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send gex request o k response
func (o *SendGexRequestOK) SetPayload(payload *adminmessages.GexResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendGexRequestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendGexRequestBadRequestCode is the HTTP code returned for type SendGexRequestBadRequest
const SendGexRequestBadRequestCode int = 400

/*SendGexRequestBadRequest invalid request

swagger:response sendGexRequestBadRequest
*/
type SendGexRequestBadRequest struct {
}

// NewSendGexRequestBadRequest creates SendGexRequestBadRequest with default headers values
func NewSendGexRequestBadRequest() *SendGexRequestBadRequest {

	return &SendGexRequestBadRequest{}
}

// WriteResponse to the client
func (o *SendGexRequestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// SendGexRequestInternalServerErrorCode is the HTTP code returned for type SendGexRequestInternalServerError
const SendGexRequestInternalServerErrorCode int = 500

/*SendGexRequestInternalServerError internal server error

swagger:response sendGexRequestInternalServerError
*/
type SendGexRequestInternalServerError struct {
}

// NewSendGexRequestInternalServerError creates SendGexRequestInternalServerError with default headers values
func NewSendGexRequestInternalServerError() *SendGexRequestInternalServerError {

	return &SendGexRequestInternalServerError{}
}

// WriteResponse to the client
func (o *SendGexRequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
