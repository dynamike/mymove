// Code generated by go-swagger; DO NOT EDIT.

package adminmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SendGexRequest send gex request
// swagger:model SendGexRequest
type SendGexRequest struct {

	// created at
	// Required: true
	// Format: datetime
	CreatedAt *strfmt.DateTime `json:"createdAt"`

	// transaction name
	// Required: true
	ReportName *string `json:"reportName"`
}

// Validate validates this send gex request
func (m *SendGexRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReportName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SendGexRequest) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("createdAt", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("createdAt", "body", "datetime", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SendGexRequest) validateReportName(formats strfmt.Registry) error {

	if err := validate.Required("reportName", "body", m.ReportName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SendGexRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SendGexRequest) UnmarshalBinary(b []byte) error {
	var res SendGexRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
