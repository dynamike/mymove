// Code generated by go-swagger; DO NOT EDIT.

package move_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ListMoveTaskOrdersForMoveOrderOKCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderOK
const ListMoveTaskOrdersForMoveOrderOKCode int = 200

/*ListMoveTaskOrdersForMoveOrderOK Successfully retrieved all move task orders associated with a move order

swagger:response listMoveTaskOrdersForMoveOrderOK
*/
type ListMoveTaskOrdersForMoveOrderOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.MoveTaskOrders `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderOK creates ListMoveTaskOrdersForMoveOrderOK with default headers values
func NewListMoveTaskOrdersForMoveOrderOK() *ListMoveTaskOrdersForMoveOrderOK {

	return &ListMoveTaskOrdersForMoveOrderOK{}
}

// WithPayload adds the payload to the list move task orders for move order o k response
func (o *ListMoveTaskOrdersForMoveOrderOK) WithPayload(payload ghcmessages.MoveTaskOrders) *ListMoveTaskOrdersForMoveOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order o k response
func (o *ListMoveTaskOrdersForMoveOrderOK) SetPayload(payload ghcmessages.MoveTaskOrders) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.MoveTaskOrders{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForMoveOrderBadRequestCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderBadRequest
const ListMoveTaskOrdersForMoveOrderBadRequestCode int = 400

/*ListMoveTaskOrdersForMoveOrderBadRequest The request payload is invalid

swagger:response listMoveTaskOrdersForMoveOrderBadRequest
*/
type ListMoveTaskOrdersForMoveOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderBadRequest creates ListMoveTaskOrdersForMoveOrderBadRequest with default headers values
func NewListMoveTaskOrdersForMoveOrderBadRequest() *ListMoveTaskOrdersForMoveOrderBadRequest {

	return &ListMoveTaskOrdersForMoveOrderBadRequest{}
}

// WithPayload adds the payload to the list move task orders for move order bad request response
func (o *ListMoveTaskOrdersForMoveOrderBadRequest) WithPayload(payload interface{}) *ListMoveTaskOrdersForMoveOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order bad request response
func (o *ListMoveTaskOrdersForMoveOrderBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForMoveOrderUnauthorizedCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderUnauthorized
const ListMoveTaskOrdersForMoveOrderUnauthorizedCode int = 401

/*ListMoveTaskOrdersForMoveOrderUnauthorized The request was denied

swagger:response listMoveTaskOrdersForMoveOrderUnauthorized
*/
type ListMoveTaskOrdersForMoveOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderUnauthorized creates ListMoveTaskOrdersForMoveOrderUnauthorized with default headers values
func NewListMoveTaskOrdersForMoveOrderUnauthorized() *ListMoveTaskOrdersForMoveOrderUnauthorized {

	return &ListMoveTaskOrdersForMoveOrderUnauthorized{}
}

// WithPayload adds the payload to the list move task orders for move order unauthorized response
func (o *ListMoveTaskOrdersForMoveOrderUnauthorized) WithPayload(payload interface{}) *ListMoveTaskOrdersForMoveOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order unauthorized response
func (o *ListMoveTaskOrdersForMoveOrderUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForMoveOrderForbiddenCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderForbidden
const ListMoveTaskOrdersForMoveOrderForbiddenCode int = 403

/*ListMoveTaskOrdersForMoveOrderForbidden The request was denied

swagger:response listMoveTaskOrdersForMoveOrderForbidden
*/
type ListMoveTaskOrdersForMoveOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderForbidden creates ListMoveTaskOrdersForMoveOrderForbidden with default headers values
func NewListMoveTaskOrdersForMoveOrderForbidden() *ListMoveTaskOrdersForMoveOrderForbidden {

	return &ListMoveTaskOrdersForMoveOrderForbidden{}
}

// WithPayload adds the payload to the list move task orders for move order forbidden response
func (o *ListMoveTaskOrdersForMoveOrderForbidden) WithPayload(payload interface{}) *ListMoveTaskOrdersForMoveOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order forbidden response
func (o *ListMoveTaskOrdersForMoveOrderForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForMoveOrderNotFoundCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderNotFound
const ListMoveTaskOrdersForMoveOrderNotFoundCode int = 404

/*ListMoveTaskOrdersForMoveOrderNotFound The requested resource wasn't found

swagger:response listMoveTaskOrdersForMoveOrderNotFound
*/
type ListMoveTaskOrdersForMoveOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderNotFound creates ListMoveTaskOrdersForMoveOrderNotFound with default headers values
func NewListMoveTaskOrdersForMoveOrderNotFound() *ListMoveTaskOrdersForMoveOrderNotFound {

	return &ListMoveTaskOrdersForMoveOrderNotFound{}
}

// WithPayload adds the payload to the list move task orders for move order not found response
func (o *ListMoveTaskOrdersForMoveOrderNotFound) WithPayload(payload interface{}) *ListMoveTaskOrdersForMoveOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order not found response
func (o *ListMoveTaskOrdersForMoveOrderNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListMoveTaskOrdersForMoveOrderInternalServerErrorCode is the HTTP code returned for type ListMoveTaskOrdersForMoveOrderInternalServerError
const ListMoveTaskOrdersForMoveOrderInternalServerErrorCode int = 500

/*ListMoveTaskOrdersForMoveOrderInternalServerError A server error occurred

swagger:response listMoveTaskOrdersForMoveOrderInternalServerError
*/
type ListMoveTaskOrdersForMoveOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListMoveTaskOrdersForMoveOrderInternalServerError creates ListMoveTaskOrdersForMoveOrderInternalServerError with default headers values
func NewListMoveTaskOrdersForMoveOrderInternalServerError() *ListMoveTaskOrdersForMoveOrderInternalServerError {

	return &ListMoveTaskOrdersForMoveOrderInternalServerError{}
}

// WithPayload adds the payload to the list move task orders for move order internal server error response
func (o *ListMoveTaskOrdersForMoveOrderInternalServerError) WithPayload(payload interface{}) *ListMoveTaskOrdersForMoveOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list move task orders for move order internal server error response
func (o *ListMoveTaskOrdersForMoveOrderInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListMoveTaskOrdersForMoveOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
