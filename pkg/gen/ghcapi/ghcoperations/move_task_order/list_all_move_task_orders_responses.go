// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	ghcmessages "github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ListAllMoveTaskOrdersOKCode is the HTTP code returned for type ListAllMoveTaskOrdersOK
const ListAllMoveTaskOrdersOKCode int = 200

/*ListAllMoveTaskOrdersOK Successfully retrieved all move orders

swagger:response listAllMoveTaskOrdersOK
*/
type ListAllMoveTaskOrdersOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.MoveTaskOrders `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersOK creates ListAllMoveTaskOrdersOK with default headers values
func NewListAllMoveTaskOrdersOK() *ListAllMoveTaskOrdersOK {

	return &ListAllMoveTaskOrdersOK{}
}

// WithPayload adds the payload to the list all move task orders o k response
func (o *ListAllMoveTaskOrdersOK) WithPayload(payload ghcmessages.MoveTaskOrders) *ListAllMoveTaskOrdersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders o k response
func (o *ListAllMoveTaskOrdersOK) SetPayload(payload ghcmessages.MoveTaskOrders) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.MoveTaskOrders{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListAllMoveTaskOrdersBadRequestCode is the HTTP code returned for type ListAllMoveTaskOrdersBadRequest
const ListAllMoveTaskOrdersBadRequestCode int = 400

/*ListAllMoveTaskOrdersBadRequest The request payload is invalid

swagger:response listAllMoveTaskOrdersBadRequest
*/
type ListAllMoveTaskOrdersBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersBadRequest creates ListAllMoveTaskOrdersBadRequest with default headers values
func NewListAllMoveTaskOrdersBadRequest() *ListAllMoveTaskOrdersBadRequest {

	return &ListAllMoveTaskOrdersBadRequest{}
}

// WithPayload adds the payload to the list all move task orders bad request response
func (o *ListAllMoveTaskOrdersBadRequest) WithPayload(payload interface{}) *ListAllMoveTaskOrdersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders bad request response
func (o *ListAllMoveTaskOrdersBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListAllMoveTaskOrdersUnauthorizedCode is the HTTP code returned for type ListAllMoveTaskOrdersUnauthorized
const ListAllMoveTaskOrdersUnauthorizedCode int = 401

/*ListAllMoveTaskOrdersUnauthorized The request was denied

swagger:response listAllMoveTaskOrdersUnauthorized
*/
type ListAllMoveTaskOrdersUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersUnauthorized creates ListAllMoveTaskOrdersUnauthorized with default headers values
func NewListAllMoveTaskOrdersUnauthorized() *ListAllMoveTaskOrdersUnauthorized {

	return &ListAllMoveTaskOrdersUnauthorized{}
}

// WithPayload adds the payload to the list all move task orders unauthorized response
func (o *ListAllMoveTaskOrdersUnauthorized) WithPayload(payload interface{}) *ListAllMoveTaskOrdersUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders unauthorized response
func (o *ListAllMoveTaskOrdersUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListAllMoveTaskOrdersForbiddenCode is the HTTP code returned for type ListAllMoveTaskOrdersForbidden
const ListAllMoveTaskOrdersForbiddenCode int = 403

/*ListAllMoveTaskOrdersForbidden The request was denied

swagger:response listAllMoveTaskOrdersForbidden
*/
type ListAllMoveTaskOrdersForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersForbidden creates ListAllMoveTaskOrdersForbidden with default headers values
func NewListAllMoveTaskOrdersForbidden() *ListAllMoveTaskOrdersForbidden {

	return &ListAllMoveTaskOrdersForbidden{}
}

// WithPayload adds the payload to the list all move task orders forbidden response
func (o *ListAllMoveTaskOrdersForbidden) WithPayload(payload interface{}) *ListAllMoveTaskOrdersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders forbidden response
func (o *ListAllMoveTaskOrdersForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListAllMoveTaskOrdersNotFoundCode is the HTTP code returned for type ListAllMoveTaskOrdersNotFound
const ListAllMoveTaskOrdersNotFoundCode int = 404

/*ListAllMoveTaskOrdersNotFound The requested resource wasn't found

swagger:response listAllMoveTaskOrdersNotFound
*/
type ListAllMoveTaskOrdersNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersNotFound creates ListAllMoveTaskOrdersNotFound with default headers values
func NewListAllMoveTaskOrdersNotFound() *ListAllMoveTaskOrdersNotFound {

	return &ListAllMoveTaskOrdersNotFound{}
}

// WithPayload adds the payload to the list all move task orders not found response
func (o *ListAllMoveTaskOrdersNotFound) WithPayload(payload interface{}) *ListAllMoveTaskOrdersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders not found response
func (o *ListAllMoveTaskOrdersNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListAllMoveTaskOrdersInternalServerErrorCode is the HTTP code returned for type ListAllMoveTaskOrdersInternalServerError
const ListAllMoveTaskOrdersInternalServerErrorCode int = 500

/*ListAllMoveTaskOrdersInternalServerError A server error occurred

swagger:response listAllMoveTaskOrdersInternalServerError
*/
type ListAllMoveTaskOrdersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListAllMoveTaskOrdersInternalServerError creates ListAllMoveTaskOrdersInternalServerError with default headers values
func NewListAllMoveTaskOrdersInternalServerError() *ListAllMoveTaskOrdersInternalServerError {

	return &ListAllMoveTaskOrdersInternalServerError{}
}

// WithPayload adds the payload to the list all move task orders internal server error response
func (o *ListAllMoveTaskOrdersInternalServerError) WithPayload(payload interface{}) *ListAllMoveTaskOrdersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list all move task orders internal server error response
func (o *ListAllMoveTaskOrdersInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAllMoveTaskOrdersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
