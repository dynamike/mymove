// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateReviewedPaymentRequestStatusHandlerFunc turns a function with the right signature into a update reviewed payment request status handler
type UpdateReviewedPaymentRequestStatusHandlerFunc func(UpdateReviewedPaymentRequestStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateReviewedPaymentRequestStatusHandlerFunc) Handle(params UpdateReviewedPaymentRequestStatusParams) middleware.Responder {
	return fn(params)
}

// UpdateReviewedPaymentRequestStatusHandler interface for that can handle valid update reviewed payment request status params
type UpdateReviewedPaymentRequestStatusHandler interface {
	Handle(UpdateReviewedPaymentRequestStatusParams) middleware.Responder
}

// NewUpdateReviewedPaymentRequestStatus creates a new http.Handler for the update reviewed payment request status operation
func NewUpdateReviewedPaymentRequestStatus(ctx *middleware.Context, handler UpdateReviewedPaymentRequestStatusHandler) *UpdateReviewedPaymentRequestStatus {
	return &UpdateReviewedPaymentRequestStatus{Context: ctx, Handler: handler}
}

/*UpdateReviewedPaymentRequestStatus swagger:route PATCH /payment-requests/{paymentRequestID}/status/reviewed paymentRequests updateReviewedPaymentRequestStatus

Updates status of a payment request by id

Updates status of a payment request by id

*/
type UpdateReviewedPaymentRequestStatus struct {
	Context *middleware.Context
	Handler UpdateReviewedPaymentRequestStatusHandler
}

func (o *UpdateReviewedPaymentRequestStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateReviewedPaymentRequestStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
