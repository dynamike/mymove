// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateProcessedPaymentRequestStatusHandlerFunc turns a function with the right signature into a update processed payment request status handler
type UpdateProcessedPaymentRequestStatusHandlerFunc func(UpdateProcessedPaymentRequestStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateProcessedPaymentRequestStatusHandlerFunc) Handle(params UpdateProcessedPaymentRequestStatusParams) middleware.Responder {
	return fn(params)
}

// UpdateProcessedPaymentRequestStatusHandler interface for that can handle valid update processed payment request status params
type UpdateProcessedPaymentRequestStatusHandler interface {
	Handle(UpdateProcessedPaymentRequestStatusParams) middleware.Responder
}

// NewUpdateProcessedPaymentRequestStatus creates a new http.Handler for the update processed payment request status operation
func NewUpdateProcessedPaymentRequestStatus(ctx *middleware.Context, handler UpdateProcessedPaymentRequestStatusHandler) *UpdateProcessedPaymentRequestStatus {
	return &UpdateProcessedPaymentRequestStatus{Context: ctx, Handler: handler}
}

/*UpdateProcessedPaymentRequestStatus swagger:route PATCH /payment-requests/{paymentRequestID}/status/processed paymentRequest updateProcessedPaymentRequestStatus

updateProcessedPaymentRequestStatus

Updates status of a payment request to SENT_TO_GEX, RECEIVED_BY_GEX, EDI_ERROR or PAID

This is a support endpoint and is not available in production.


*/
type UpdateProcessedPaymentRequestStatus struct {
	Context *middleware.Context
	Handler UpdateProcessedPaymentRequestStatusHandler
}

func (o *UpdateProcessedPaymentRequestStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateProcessedPaymentRequestStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
