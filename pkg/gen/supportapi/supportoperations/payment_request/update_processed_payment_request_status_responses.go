// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// UpdateProcessedPaymentRequestStatusOKCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusOK
const UpdateProcessedPaymentRequestStatusOKCode int = 200

/*UpdateProcessedPaymentRequestStatusOK Successfully updated payment request status.

swagger:response updateProcessedPaymentRequestStatusOK
*/
type UpdateProcessedPaymentRequestStatusOK struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.PaymentRequest `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusOK creates UpdateProcessedPaymentRequestStatusOK with default headers values
func NewUpdateProcessedPaymentRequestStatusOK() *UpdateProcessedPaymentRequestStatusOK {

	return &UpdateProcessedPaymentRequestStatusOK{}
}

// WithPayload adds the payload to the update processed payment request status o k response
func (o *UpdateProcessedPaymentRequestStatusOK) WithPayload(payload *supportmessages.PaymentRequest) *UpdateProcessedPaymentRequestStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status o k response
func (o *UpdateProcessedPaymentRequestStatusOK) SetPayload(payload *supportmessages.PaymentRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusBadRequestCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusBadRequest
const UpdateProcessedPaymentRequestStatusBadRequestCode int = 400

/*UpdateProcessedPaymentRequestStatusBadRequest The request payload is invalid.

swagger:response updateProcessedPaymentRequestStatusBadRequest
*/
type UpdateProcessedPaymentRequestStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusBadRequest creates UpdateProcessedPaymentRequestStatusBadRequest with default headers values
func NewUpdateProcessedPaymentRequestStatusBadRequest() *UpdateProcessedPaymentRequestStatusBadRequest {

	return &UpdateProcessedPaymentRequestStatusBadRequest{}
}

// WithPayload adds the payload to the update processed payment request status bad request response
func (o *UpdateProcessedPaymentRequestStatusBadRequest) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status bad request response
func (o *UpdateProcessedPaymentRequestStatusBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusUnauthorizedCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusUnauthorized
const UpdateProcessedPaymentRequestStatusUnauthorizedCode int = 401

/*UpdateProcessedPaymentRequestStatusUnauthorized The request was denied.

swagger:response updateProcessedPaymentRequestStatusUnauthorized
*/
type UpdateProcessedPaymentRequestStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusUnauthorized creates UpdateProcessedPaymentRequestStatusUnauthorized with default headers values
func NewUpdateProcessedPaymentRequestStatusUnauthorized() *UpdateProcessedPaymentRequestStatusUnauthorized {

	return &UpdateProcessedPaymentRequestStatusUnauthorized{}
}

// WithPayload adds the payload to the update processed payment request status unauthorized response
func (o *UpdateProcessedPaymentRequestStatusUnauthorized) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status unauthorized response
func (o *UpdateProcessedPaymentRequestStatusUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusForbiddenCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusForbidden
const UpdateProcessedPaymentRequestStatusForbiddenCode int = 403

/*UpdateProcessedPaymentRequestStatusForbidden The request was denied.

swagger:response updateProcessedPaymentRequestStatusForbidden
*/
type UpdateProcessedPaymentRequestStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusForbidden creates UpdateProcessedPaymentRequestStatusForbidden with default headers values
func NewUpdateProcessedPaymentRequestStatusForbidden() *UpdateProcessedPaymentRequestStatusForbidden {

	return &UpdateProcessedPaymentRequestStatusForbidden{}
}

// WithPayload adds the payload to the update processed payment request status forbidden response
func (o *UpdateProcessedPaymentRequestStatusForbidden) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status forbidden response
func (o *UpdateProcessedPaymentRequestStatusForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusNotFoundCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusNotFound
const UpdateProcessedPaymentRequestStatusNotFoundCode int = 404

/*UpdateProcessedPaymentRequestStatusNotFound The requested resource wasn't found.

swagger:response updateProcessedPaymentRequestStatusNotFound
*/
type UpdateProcessedPaymentRequestStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusNotFound creates UpdateProcessedPaymentRequestStatusNotFound with default headers values
func NewUpdateProcessedPaymentRequestStatusNotFound() *UpdateProcessedPaymentRequestStatusNotFound {

	return &UpdateProcessedPaymentRequestStatusNotFound{}
}

// WithPayload adds the payload to the update processed payment request status not found response
func (o *UpdateProcessedPaymentRequestStatusNotFound) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status not found response
func (o *UpdateProcessedPaymentRequestStatusNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusConflictCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusConflict
const UpdateProcessedPaymentRequestStatusConflictCode int = 409

/*UpdateProcessedPaymentRequestStatusConflict There was a conflict with the request.

swagger:response updateProcessedPaymentRequestStatusConflict
*/
type UpdateProcessedPaymentRequestStatusConflict struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusConflict creates UpdateProcessedPaymentRequestStatusConflict with default headers values
func NewUpdateProcessedPaymentRequestStatusConflict() *UpdateProcessedPaymentRequestStatusConflict {

	return &UpdateProcessedPaymentRequestStatusConflict{}
}

// WithPayload adds the payload to the update processed payment request status conflict response
func (o *UpdateProcessedPaymentRequestStatusConflict) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status conflict response
func (o *UpdateProcessedPaymentRequestStatusConflict) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusPreconditionFailedCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusPreconditionFailed
const UpdateProcessedPaymentRequestStatusPreconditionFailedCode int = 412

/*UpdateProcessedPaymentRequestStatusPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response updateProcessedPaymentRequestStatusPreconditionFailed
*/
type UpdateProcessedPaymentRequestStatusPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusPreconditionFailed creates UpdateProcessedPaymentRequestStatusPreconditionFailed with default headers values
func NewUpdateProcessedPaymentRequestStatusPreconditionFailed() *UpdateProcessedPaymentRequestStatusPreconditionFailed {

	return &UpdateProcessedPaymentRequestStatusPreconditionFailed{}
}

// WithPayload adds the payload to the update processed payment request status precondition failed response
func (o *UpdateProcessedPaymentRequestStatusPreconditionFailed) WithPayload(payload *supportmessages.ClientError) *UpdateProcessedPaymentRequestStatusPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status precondition failed response
func (o *UpdateProcessedPaymentRequestStatusPreconditionFailed) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusUnprocessableEntityCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusUnprocessableEntity
const UpdateProcessedPaymentRequestStatusUnprocessableEntityCode int = 422

/*UpdateProcessedPaymentRequestStatusUnprocessableEntity The payload was unprocessable.

swagger:response updateProcessedPaymentRequestStatusUnprocessableEntity
*/
type UpdateProcessedPaymentRequestStatusUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusUnprocessableEntity creates UpdateProcessedPaymentRequestStatusUnprocessableEntity with default headers values
func NewUpdateProcessedPaymentRequestStatusUnprocessableEntity() *UpdateProcessedPaymentRequestStatusUnprocessableEntity {

	return &UpdateProcessedPaymentRequestStatusUnprocessableEntity{}
}

// WithPayload adds the payload to the update processed payment request status unprocessable entity response
func (o *UpdateProcessedPaymentRequestStatusUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *UpdateProcessedPaymentRequestStatusUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status unprocessable entity response
func (o *UpdateProcessedPaymentRequestStatusUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProcessedPaymentRequestStatusInternalServerErrorCode is the HTTP code returned for type UpdateProcessedPaymentRequestStatusInternalServerError
const UpdateProcessedPaymentRequestStatusInternalServerErrorCode int = 500

/*UpdateProcessedPaymentRequestStatusInternalServerError A server error occurred.

swagger:response updateProcessedPaymentRequestStatusInternalServerError
*/
type UpdateProcessedPaymentRequestStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewUpdateProcessedPaymentRequestStatusInternalServerError creates UpdateProcessedPaymentRequestStatusInternalServerError with default headers values
func NewUpdateProcessedPaymentRequestStatusInternalServerError() *UpdateProcessedPaymentRequestStatusInternalServerError {

	return &UpdateProcessedPaymentRequestStatusInternalServerError{}
}

// WithPayload adds the payload to the update processed payment request status internal server error response
func (o *UpdateProcessedPaymentRequestStatusInternalServerError) WithPayload(payload *supportmessages.Error) *UpdateProcessedPaymentRequestStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update processed payment request status internal server error response
func (o *UpdateProcessedPaymentRequestStatusInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProcessedPaymentRequestStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
