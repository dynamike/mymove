// Code generated by go-swagger; DO NOT EDIT.

package payment_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// UpdateReviewedPaymentRequestStatusOKCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusOK
const UpdateReviewedPaymentRequestStatusOKCode int = 200

/*UpdateReviewedPaymentRequestStatusOK Successfully updated payment request status.

swagger:response updateReviewedPaymentRequestStatusOK
*/
type UpdateReviewedPaymentRequestStatusOK struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.PaymentRequest `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusOK creates UpdateReviewedPaymentRequestStatusOK with default headers values
func NewUpdateReviewedPaymentRequestStatusOK() *UpdateReviewedPaymentRequestStatusOK {

	return &UpdateReviewedPaymentRequestStatusOK{}
}

// WithPayload adds the payload to the update reviewed payment request status o k response
func (o *UpdateReviewedPaymentRequestStatusOK) WithPayload(payload *supportmessages.PaymentRequest) *UpdateReviewedPaymentRequestStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status o k response
func (o *UpdateReviewedPaymentRequestStatusOK) SetPayload(payload *supportmessages.PaymentRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusBadRequestCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusBadRequest
const UpdateReviewedPaymentRequestStatusBadRequestCode int = 400

/*UpdateReviewedPaymentRequestStatusBadRequest The request payload is invalid.

swagger:response updateReviewedPaymentRequestStatusBadRequest
*/
type UpdateReviewedPaymentRequestStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusBadRequest creates UpdateReviewedPaymentRequestStatusBadRequest with default headers values
func NewUpdateReviewedPaymentRequestStatusBadRequest() *UpdateReviewedPaymentRequestStatusBadRequest {

	return &UpdateReviewedPaymentRequestStatusBadRequest{}
}

// WithPayload adds the payload to the update reviewed payment request status bad request response
func (o *UpdateReviewedPaymentRequestStatusBadRequest) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status bad request response
func (o *UpdateReviewedPaymentRequestStatusBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusUnauthorizedCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusUnauthorized
const UpdateReviewedPaymentRequestStatusUnauthorizedCode int = 401

/*UpdateReviewedPaymentRequestStatusUnauthorized The request was denied.

swagger:response updateReviewedPaymentRequestStatusUnauthorized
*/
type UpdateReviewedPaymentRequestStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusUnauthorized creates UpdateReviewedPaymentRequestStatusUnauthorized with default headers values
func NewUpdateReviewedPaymentRequestStatusUnauthorized() *UpdateReviewedPaymentRequestStatusUnauthorized {

	return &UpdateReviewedPaymentRequestStatusUnauthorized{}
}

// WithPayload adds the payload to the update reviewed payment request status unauthorized response
func (o *UpdateReviewedPaymentRequestStatusUnauthorized) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status unauthorized response
func (o *UpdateReviewedPaymentRequestStatusUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusForbiddenCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusForbidden
const UpdateReviewedPaymentRequestStatusForbiddenCode int = 403

/*UpdateReviewedPaymentRequestStatusForbidden The request was denied.

swagger:response updateReviewedPaymentRequestStatusForbidden
*/
type UpdateReviewedPaymentRequestStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusForbidden creates UpdateReviewedPaymentRequestStatusForbidden with default headers values
func NewUpdateReviewedPaymentRequestStatusForbidden() *UpdateReviewedPaymentRequestStatusForbidden {

	return &UpdateReviewedPaymentRequestStatusForbidden{}
}

// WithPayload adds the payload to the update reviewed payment request status forbidden response
func (o *UpdateReviewedPaymentRequestStatusForbidden) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status forbidden response
func (o *UpdateReviewedPaymentRequestStatusForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusNotFoundCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusNotFound
const UpdateReviewedPaymentRequestStatusNotFoundCode int = 404

/*UpdateReviewedPaymentRequestStatusNotFound The requested resource wasn't found.

swagger:response updateReviewedPaymentRequestStatusNotFound
*/
type UpdateReviewedPaymentRequestStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusNotFound creates UpdateReviewedPaymentRequestStatusNotFound with default headers values
func NewUpdateReviewedPaymentRequestStatusNotFound() *UpdateReviewedPaymentRequestStatusNotFound {

	return &UpdateReviewedPaymentRequestStatusNotFound{}
}

// WithPayload adds the payload to the update reviewed payment request status not found response
func (o *UpdateReviewedPaymentRequestStatusNotFound) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status not found response
func (o *UpdateReviewedPaymentRequestStatusNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusConflictCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusConflict
const UpdateReviewedPaymentRequestStatusConflictCode int = 409

/*UpdateReviewedPaymentRequestStatusConflict There was a conflict with the request.

swagger:response updateReviewedPaymentRequestStatusConflict
*/
type UpdateReviewedPaymentRequestStatusConflict struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusConflict creates UpdateReviewedPaymentRequestStatusConflict with default headers values
func NewUpdateReviewedPaymentRequestStatusConflict() *UpdateReviewedPaymentRequestStatusConflict {

	return &UpdateReviewedPaymentRequestStatusConflict{}
}

// WithPayload adds the payload to the update reviewed payment request status conflict response
func (o *UpdateReviewedPaymentRequestStatusConflict) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status conflict response
func (o *UpdateReviewedPaymentRequestStatusConflict) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusPreconditionFailedCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusPreconditionFailed
const UpdateReviewedPaymentRequestStatusPreconditionFailedCode int = 412

/*UpdateReviewedPaymentRequestStatusPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response updateReviewedPaymentRequestStatusPreconditionFailed
*/
type UpdateReviewedPaymentRequestStatusPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusPreconditionFailed creates UpdateReviewedPaymentRequestStatusPreconditionFailed with default headers values
func NewUpdateReviewedPaymentRequestStatusPreconditionFailed() *UpdateReviewedPaymentRequestStatusPreconditionFailed {

	return &UpdateReviewedPaymentRequestStatusPreconditionFailed{}
}

// WithPayload adds the payload to the update reviewed payment request status precondition failed response
func (o *UpdateReviewedPaymentRequestStatusPreconditionFailed) WithPayload(payload *supportmessages.ClientError) *UpdateReviewedPaymentRequestStatusPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status precondition failed response
func (o *UpdateReviewedPaymentRequestStatusPreconditionFailed) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusUnprocessableEntityCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusUnprocessableEntity
const UpdateReviewedPaymentRequestStatusUnprocessableEntityCode int = 422

/*UpdateReviewedPaymentRequestStatusUnprocessableEntity The payload was unprocessable.

swagger:response updateReviewedPaymentRequestStatusUnprocessableEntity
*/
type UpdateReviewedPaymentRequestStatusUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusUnprocessableEntity creates UpdateReviewedPaymentRequestStatusUnprocessableEntity with default headers values
func NewUpdateReviewedPaymentRequestStatusUnprocessableEntity() *UpdateReviewedPaymentRequestStatusUnprocessableEntity {

	return &UpdateReviewedPaymentRequestStatusUnprocessableEntity{}
}

// WithPayload adds the payload to the update reviewed payment request status unprocessable entity response
func (o *UpdateReviewedPaymentRequestStatusUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *UpdateReviewedPaymentRequestStatusUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status unprocessable entity response
func (o *UpdateReviewedPaymentRequestStatusUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateReviewedPaymentRequestStatusInternalServerErrorCode is the HTTP code returned for type UpdateReviewedPaymentRequestStatusInternalServerError
const UpdateReviewedPaymentRequestStatusInternalServerErrorCode int = 500

/*UpdateReviewedPaymentRequestStatusInternalServerError A server error occurred.

swagger:response updateReviewedPaymentRequestStatusInternalServerError
*/
type UpdateReviewedPaymentRequestStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewUpdateReviewedPaymentRequestStatusInternalServerError creates UpdateReviewedPaymentRequestStatusInternalServerError with default headers values
func NewUpdateReviewedPaymentRequestStatusInternalServerError() *UpdateReviewedPaymentRequestStatusInternalServerError {

	return &UpdateReviewedPaymentRequestStatusInternalServerError{}
}

// WithPayload adds the payload to the update reviewed payment request status internal server error response
func (o *UpdateReviewedPaymentRequestStatusInternalServerError) WithPayload(payload *supportmessages.Error) *UpdateReviewedPaymentRequestStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update reviewed payment request status internal server error response
func (o *UpdateReviewedPaymentRequestStatusInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateReviewedPaymentRequestStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
