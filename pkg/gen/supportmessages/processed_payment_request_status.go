// Code generated by go-swagger; DO NOT EDIT.

package supportmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProcessedPaymentRequestStatus Payment Request Status
//
// swagger:model ProcessedPaymentRequestStatus
type ProcessedPaymentRequestStatus string

const (

	// ProcessedPaymentRequestStatusREVIEWED captures enum value "REVIEWED"
	ProcessedPaymentRequestStatusREVIEWED ProcessedPaymentRequestStatus = "REVIEWED"

	// ProcessedPaymentRequestStatusREVIEWEDANDALLSERVICEITEMSREJECTED captures enum value "REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED"
	ProcessedPaymentRequestStatusREVIEWEDANDALLSERVICEITEMSREJECTED ProcessedPaymentRequestStatus = "REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED"

	// ProcessedPaymentRequestStatusSENTTOGEX captures enum value "SENT_TO_GEX"
	ProcessedPaymentRequestStatusSENTTOGEX ProcessedPaymentRequestStatus = "SENT_TO_GEX"

	// ProcessedPaymentRequestStatusPENDING captures enum value "PENDING"
	ProcessedPaymentRequestStatusPENDING ProcessedPaymentRequestStatus = "PENDING"

	// ProcessedPaymentRequestStatusRECEIVEDBYGEX captures enum value "RECEIVED_BY_GEX"
	ProcessedPaymentRequestStatusRECEIVEDBYGEX ProcessedPaymentRequestStatus = "RECEIVED_BY_GEX"

	// ProcessedPaymentRequestStatusPAID captures enum value "PAID"
	ProcessedPaymentRequestStatusPAID ProcessedPaymentRequestStatus = "PAID"

	// ProcessedPaymentRequestStatusEDIERROR captures enum value "EDI_ERROR"
	ProcessedPaymentRequestStatusEDIERROR ProcessedPaymentRequestStatus = "EDI_ERROR"
)

// for schema
var processedPaymentRequestStatusEnum []interface{}

func init() {
	var res []ProcessedPaymentRequestStatus
	if err := json.Unmarshal([]byte(`["REVIEWED","REVIEWED_AND_ALL_SERVICE_ITEMS_REJECTED","SENT_TO_GEX","PENDING","RECEIVED_BY_GEX","PAID","EDI_ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		processedPaymentRequestStatusEnum = append(processedPaymentRequestStatusEnum, v)
	}
}

func (m ProcessedPaymentRequestStatus) validateProcessedPaymentRequestStatusEnum(path, location string, value ProcessedPaymentRequestStatus) error {
	if err := validate.EnumCase(path, location, value, processedPaymentRequestStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this processed payment request status
func (m ProcessedPaymentRequestStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProcessedPaymentRequestStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
