swagger: '2.0'
info:
  description: The internal/website API for my.move.mil
  version: 0.0.1
  title: my.move.mil
  contact:
    email: ppp@truss.works
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
basePath: /internal
consumes:
  - application/json
produces:
  - application/json
definitions:
  LoggedInUser:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        readOnly: true
      firstName:
        type: string
        example: John
        readOnly: true
      serviceMember:
        $ref: '#/definitions/ServiceMember'
      officeUser:
        $ref: '#/definitions/OfficeUser'
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
    required:
      - id
  Affiliation:
    type: string
    x-nullable: true
    title: Branch of service
    enum: &AFFILIATION
      - ARMY
      - NAVY
      - MARINES
      - AIR_FORCE
      - COAST_GUARD
    x-display-value:
      ARMY: Army
      NAVY: Navy
      MARINES: Marine Corps
      AIR_FORCE: Air Force
      COAST_GUARD: Coast Guard
  DutyStation:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
      addressId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      address:
        $ref: '#/definitions/Address'
      affiliation:
        $ref: '#/definitions/Affiliation'
      transportationOffice:
        $ref: '#/definitions/TransportationOffice'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - name
      - addressId
      - address
      - affiliation
      - createdAt
      - updatedAt
  TransportationOffice:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      name:
        type: string
        example: Fort Bragg North Station
      address:
        $ref: '#/definitions/Address'
      phoneLines:
        type: array
        items:
          type: string
          format: telephone
          pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
          example: 212-555-5555
      gbloc:
        type: string
        pattern: '^[A-Z]{4}$'
        example: JENQ
      latitude:
        type: number
        format: float
        example: 29.382973
      longitude:
        type: number
        format: float
        example: -98.62759
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - name
      - address
      - createdAt
      - updatedAt
  DutyStations:
    type: array
    items:
      $ref: '#/definitions/DutyStation'
  CreatePersonallyProcuredMove:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      originalMoveDate:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      pickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasAdditionalPostalCode:
        type: boolean
        x-nullable: true
        title: Will you move anything from another pickup location?
      additionalPickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destinationPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasSit:
        type: boolean
        x-nullable: true
        title: Will you put anything in storage?
      daysInStorage:
        type: integer
        title: How many days of storage do you think you'll need?
        minimum: 0
        maximum: 90
        x-nullable: true
      estimatedStorageReimbursement:
        type: string
        title: Estimated Storage Reimbursement
        x-nullable: true
      weightEstimate:
        type: integer
        minimum: 0
        title: Weight Estimate
        x-nullable: true
      netWeight:
        type: integer
        minimum: 1
        title: Net Weight
        x-nullable: true
      hasRequestedAdvance:
        type: boolean
        title: Would you like an advance of up to 60% of your PPM incentive?
      advance:
        $ref: '#/definitions/CreateReimbursement'
      advanceWorksheet:
        $ref: '#/definitions/Document'
      hasProGear:
        type: string
        title: Has Pro-Gear
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
      hasProGearOverThousand:
        type: string
        title: Has Pro-Gear Over Thousand Pounds
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
  UpdatePersonallyProcuredMove:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      originalMoveDate:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      actualMoveDate:
        type: string
        format: date
        title: When did you actually move?
        x-nullable: true
      pickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasAdditionalPostalCode:
        type: boolean
        x-nullable: true
        title: Will you move anything from another pickup location?
      additionalPickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destinationPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasSit:
        type: boolean
        x-nullable: true
        title: Will you put anything in storage?
      daysInStorage:
        type: integer
        title: How many days of storage do you think you'll need?
        minimum: 0
        maximum: 90
        x-nullable: true
      totalSitCost:
        type: integer
        title: How much does your storage cost?
        minimum: 0
        x-nullable: true
      estimatedStorageReimbursement:
        type: string
        title: Estimated Storage Reimbursement
        x-nullable: true
      weightEstimate:
        type: integer
        minimum: 0
        title: Weight Estimate
        x-nullable: true
      netWeight:
        type: integer
        minimum: 1
        title: Net Weight
        x-nullable: true
      hasRequestedAdvance:
        type: boolean
        default: false
        title: Would you like an advance of up to 60% of your PPM incentive?
      advance:
        $ref: '#/definitions/Reimbursement'
      advanceWorksheet:
        $ref: '#/definitions/Document'
      hasProGear:
        type: string
        title: Has Pro-Gear
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
      hasProGearOverThousand:
        type: string
        title: Has Pro-Gear Over Thousand Pounds
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
  PatchPersonallyProcuredMove:
    type: object
    properties:
      size:
        $ref: '#/definitions/TShirtSize'
      originalMoveDate:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      actualMoveDate:
        type: string
        format: date
        title: When did you actually move?
        x-nullable: true
      pickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasAdditionalPostalCode:
        type: boolean
        x-nullable: true
        title: Will you move anything from another pickup location?
      addtionalPickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destinationPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasSit:
        type: boolean
        x-nullable: true
        title: Will you put anything in storage?
      daysInStorage:
        type: integer
        title: How many days of storage do you think you'll need?
        minimum: 0
        maximum: 90
        x-nullable: true
      totalSitCost:
        type: integer
        minimum: 1
        title: How much does your storage cost?
        x-nullable: true
      weightEstimate:
        type: integer
        minimum: 0
        title: Weight Estimate
        x-nullable: true
      netWeight:
        type: integer
        minimum: 1
        title: Net Weight
        x-nullable: true
      incentiveEstimateMax:
        type: integer
        minimum: 1
        title: Incentive Estimate Max
        x-nullable: true
      incentiveEstimateMin:
        type: integer
        minimum: 1
        title: Incentive Estimate Min
        x-nullable: true
      hasRequestedAdvance:
        type: boolean
        default: false
        title: Would you like an advance of up to 60% of your PPM incentive?
      advance:
        $ref: '#/definitions/Reimbursement'
      advanceWorksheet:
        $ref: '#/definitions/Document'
      hasProGear:
        type: string
        title: Has Pro-Gear
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
      hasProGearOverThousand:
        type: string
        title: Has Pro-Gear Over Thousand Pounds
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
  PersonallyProcuredMove:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      moveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      size:
        $ref: '#/definitions/TShirtSize'
      originalMoveDate:
        type: string
        format: date
        title: When do you plan to move?
        x-nullable: true
      actualMoveDate:
        type: string
        format: date
        title: When did you actually move?
        x-nullable: true
      submitDate:
        type: string
        format: date-time
        title: When was the ppm move submitted?
        example: '2019-03-26T13:19:56-04:00'
        x-nullable: true
      approveDate:
        type: string
        format: date-time
        title: When was the ppm move approved?
        example: '2019-03-26T13:19:56-04:00'
        x-nullable: true
      pickupPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasAdditionalPostcalCode:
        type: boolean
        x-nullable: true
        title: Will you move anything from another pickup location?
      additonalPickupPostalCpde:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      destinationPostalCode:
        type: string
        format: zip
        title: ZIP code
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
        x-nullable: true
      hasSit:
        type: boolean
        x-nullable: true
        title: Will you put anything in storage?
      daysInStorage:
        type: integer
        title: How many days of storage do you think you'll need?
        minimum: 0
        maximum: 90
        x-nullable: true
      estimatedStorageReimbursement:
        type: string
        title: Estimated Storage Reimbursement
        x-nullable: true
      weightEstimate:
        type: integer
        minimum: 0
        title: Weight Estimate
        x-nullable: true
        x-formatting: weight
      netWeight:
        type: integer
        minimum: 1
        title: Net Weight
        x-nullable: true
        x-formatting: weight
      mileage:
        type: integer
        title: Distance between origin and destination in miles
        x-nullable: true
      plannedSitMax:
        type: integer
        title: Maximum SIT reimbursement for the planned SIT duration
        x-nullable: true
      totalSitCost:
        type: integer
        format: cents
        title: Total cost for the planned SIT duration
        x-nullable: true
      sitMax:
        type: integer
        title: Maximum SIT reimbursement for maximum SIT duration
        x-nullable: true
      incentiveEstimateMin:
        type: integer
        title: Estimated incentive minimum in cents
        x-nullable: true
      incentiveEstimateMax:
        type: integer
        title: Estimated incentive maximum in cents
        x-nullable: true
      status:
        $ref: '#/definitions/PPMStatus'
      hasRequestedAdvance:
        type: boolean
        default: false
        title: Would you like an advance of up to 60% of your PPM incentive?
      advance:
        $ref: '#/definitions/Reimbursement'
      advanceWorksheet:
        $ref: '#/definitions/Document'
      hasProGear:
        type: string
        title: Has Pro-Gear
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
        x-display-value:
          NOT SURE: Not Sure
          'YES': Yes
          'NO': No
      hasProGearOverThousand:
        type: string
        title: Has Pro-Gear Over Thousand Pounds
        enum:
          - NOT SURE
          - 'YES'
          - 'NO'
        x-nullable: true
        x-display-value:
          NOT SURE: Not Sure
          'YES': Yes
          'NO': No
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - createdAt
      - updatedAt
  SubmitMoveForApproval:
    type: object
    properties:
      certificate:
        $ref: '#/definitions/CreateSignedCertification'
  SubmitPersonallyProcuredMove:
    type: object
    properties:
      submitDate:
        type: string
        format: date-time
        title: When was the ppm move submitted?
        example: '2019-03-26T13:19:56-04:00'
    required:
      - submitDate
  PPMSitEstimate:
    type: object
    properties:
      estimate:
        type: integer
        title: Value in cents of SIT estimate for PPM
    required:
      - estimate
  PPMEstimateRange:
    type: object
    properties:
      rangeMin:
        type: integer
        title: Low estimate
      rangeMax:
        type: integer
        title: High estimate
    required:
      - rangeMin
      - rangeMax
  PPMIncentive:
    type: object
    properties:
      gcc:
        type: integer
        title: GCC
      incentivePercentage:
        type: integer
        title: PPM Incentive @ 95%
    required:
      - gcc
      - incentivePercentage
  ExpenseSummary:
    type: object
    properties:
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryExpenseSummary'
      grandTotal:
        type: object
        properties:
          paymentMethodTotals:
            $ref: '#/definitions/PaymentMethodsTotals'
          total:
            type: integer
  CategoryExpenseSummary:
    type: object
    properties:
      category:
        $ref: '#/definitions/MovingExpenseType'
      paymentMethods:
        $ref: '#/definitions/PaymentMethodsTotals'
      total:
        type: integer
  PaymentMethodsTotals:
    type: object
    properties:
      milPay:
        type: integer
      other:
        type: integer
      gtcc:
        type: integer
  ApprovePersonallyProcuredMove:
    type: object
    properties:
      approveDate:
        type: string
        format: date-time
        title: When was the ppm move approved?
        example: '2019-03-26T13:19:56-04:00'
    required:
      - approveDate
  IndexPersonallyProcuredMove:
    type: array
    items:
      $ref: '#/definitions/PersonallyProcuredMove'
  Move:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      ordersId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        readOnly: true
      locator:
        type: string
        example: '12432'
      selectedMoveType:
        $ref: '#/definitions/SelectedMoveType'
      status:
        $ref: '#/definitions/MoveStatus'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      submittedAt:
        type: string
        format: date-time
        x-nullable: true
      personallyProcuredMoves:
        $ref: '#/definitions/IndexPersonallyProcuredMove'
      mtoShipments:
        $ref: '#/definitions/MTOShipments'
      cancelReason:
        type: string
        example: 'Change of orders'
        x-nullable: true
    required:
      - id
      - ordersId
      - locator
      - createdAt
      - updatedAt
  CancelMove:
    type: object
    properties:
      cancelReason:
        type: string
        example: 'Change of orders'
        x-nullable: true
    required:
      - cancelReason
  PatchMove:
    type: object
    properties:
      selectedMoveType:
        $ref: '#/definitions/SelectedMoveType'
  SelectedMoveType:
    type: string
    title: Selected Move Type
    enum:
      - HHG
      - PPM
      - UB
      - POV
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
      - HHG_PPM
    x-nullable: true
    x-display-value:
      HHG: Household Goods Move
      PPM: Personal Procured Move
      UB: Unaccompanied Baggage
      POV: Privately-Owned Vehicle
      HHG_INTO_NTS_DOMESTIC: Non-Temporary Storage
      HHG_OUTOF_NTS_DOMESTIC: Non-Temporary Storage Release
      HHG_PPM: Both HHG and PPM
  IndexMoves:
    type: array
    items:
      $ref: '#/definitions/Move'
  MoveDocuments:
    type: array
    items:
      $ref: '#/definitions/MoveDocument'
  WeightTicketSetType:
    type: string
    x-nullable: true
    title: Select weight ticket type
    enum:
      - CAR
      - CAR_TRAILER
      - BOX_TRUCK
      - PRO_GEAR
    x-display-value:
      CAR: Car
      CAR_TRAILER: Car + Trailer
      BOX_TRUCK: Box truck
      PRO_GEAR: Pro-gear
  MoveDocument:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      moveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      personallyProcurredMoveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      document:
        $ref: '#/definitions/Document'
      title:
        type: string
        example: very_useful_document.pdf
        title: Document title
      moveDocumentType:
        $ref: '#/definitions/MoveDocumentType'
      status:
        $ref: '#/definitions/MoveDocumentStatus'
      notes:
        type: string
        example: This document is good to go!
        x-nullable: true
        title: Notes
      movingExpenseType:
        $ref: '#/definitions/MovingExpenseType'
      requestedAmountCents:
        type: integer
        format: cents
        minimum: 1
        title: Requested Amount
        description: unit is cents
      paymentMethod:
        type: string
        title: Payment Method
        enum:
          - OTHER
          - GTCC
        x-display-value:
          OTHER: Other account
          GTCC: GTCC
      receiptMissing:
        title: missing expense receipt
        type: boolean
        x-nullable: true
      weightTicketSetType:
        $ref: '#/definitions/WeightTicketSetType'
      vehicleNickname:
        type: string
        title: Nickname (ex. "15-foot truck")
        x-nullable: true
      vehicleMake:
        type: string
        title: Vehicle make
        x-nullable: true
      vehicleModel:
        type: string
        title: Vehicle model
        x-nullable: true
      emptyWeight:
        title: Empty weight
        type: integer
        minimum: 0
        x-nullable: true
        x-formatting: weight
      emptyWeightTicketMissing:
        title: missing empty weight ticket
        type: boolean
        x-nullable: true
      fullWeight:
        title: Full weight
        type: integer
        minimum: 0
        x-nullable: true
        x-formatting: weight
      fullWeightTicketMissing:
        title: missing full weight ticket
        type: boolean
        x-nullable: true
      weightTicketDate:
        title: Weight ticket date
        type: string
        format: date
        x-nullable: true
      trailerOwnershipMissing:
        title: missing trailer ownership documentation
        type: boolean
        x-nullable: true
      storageStartDate:
        type: string
        format: date
        title: Start date of storage for storage expenses
        x-nullable: true
      storageEndDate:
        type: string
        format: date
        title: End date of storage for storage expenses
        x-nullable: true
    required:
      - id
      - moveId
      - document
      - title
      - moveDocumentType
      - status
  CreateGenericMoveDocument:
    type: object
    properties:
      personallyProcurredMoveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      uploadIds:
        type: array
        items:
          type: string
          format: uuid
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
      title:
        type: string
        example: very_useful_document.pdf
      moveDocumentType:
        $ref: '#/definitions/MoveDocumentType'
      notes:
        type: string
        example: This document is good to go!
        x-nullable: true
        title: Notes
    required:
      - uploadIds
      - title
      - moveDocumentType
  MoveDocumentType:
    type: string
    title: Document type
    example: EXPENSE
    enum: &MOVEDOCUMENTTYPE
      - OTHER
      - WEIGHT_TICKET
      - STORAGE_EXPENSE
      - SHIPMENT_SUMMARY
      - EXPENSE
      - WEIGHT_TICKET_SET
    x-display-value:
      OTHER: Other document type
      WEIGHT_TICKET: Weight ticket
      STORAGE_EXPENSE: Storage expense receipt
      SHIPMENT_SUMMARY: Shipment summary
      EXPENSE: Expense
      WEIGHT_TICKET_SET: Weight ticket set
  CreateMovingExpenseDocument:
    type: object
    properties:
      personallyProcurredMoveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      uploadIds:
        type: array
        items:
          type: string
          format: uuid
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
      title:
        type: string
        example: very_useful_document.pdf
      movingExpenseType:
        $ref: '#/definitions/MovingExpenseType'
      moveDocumentType:
        $ref: '#/definitions/MoveDocumentType'
      requestedAmountCents:
        type: integer
        format: cents
        minimum: 1
        title: Requested Amount
        description: unit is cents
      paymentMethod:
        type: string
        title: Method of Payment
        enum:
          - OTHER
          - GTCC
        x-display-value:
          OTHER: Other payment method
          GTCC: GTCC
      receiptMissing:
        title: missing expense receipt
        type: boolean
      notes:
        type: string
        example: This document is good to go!
        x-nullable: true
        title: Notes
      storageStartDate:
        type: string
        format: date
        title: Start date of storage for storage expenses
        x-nullable: true
      storageEndDate:
        type: string
        format: date
        title: End date of storage for storage expenses
        x-nullable: true
    required:
      - title
      - moveDocumentType
      - movingExpenseType
      - requestedAmountCents
      - paymentMethod
  MovingExpenseType:
    type: string
    title: Moving Expense Type
    enum:
      - CONTRACTED_EXPENSE
      - GAS
      - OIL
      - OTHER
      - PACKING_MATERIALS
      - RENTAL_EQUIPMENT
      - STORAGE
      - TOLLS
      - WEIGHING_FEES
    x-display-value:
      CONTRACTED_EXPENSE: Contracted expense
      GAS: Gas
      OIL: Oil
      OTHER: Other
      PACKING_MATERIALS: Packing materials
      STORAGE: Storage
      RENTAL_EQUIPMENT: Rental equipment
      TOLLS: Tolls
      WEIGHING_FEES: Weighing fees
  MoveDocumentStatus:
    type: string
    title: Document status
    enum:
      - AWAITING_REVIEW
      - OK
      - HAS_ISSUE
      - EXCLUDE_FROM_CALCULATION
    x-display-value:
      AWAITING_REVIEW: Awaiting review
      OK: OK
      HAS_ISSUE: Has issue
      EXCLUDE_FROM_CALCULATION: Exclude from calculation
  CreateWeightTicketDocuments:
    type: object
    properties:
      personallyProcurredMoveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      uploadIds:
        type: array
        items:
          type: string
          format: uuid
          example: c56a4180-65aa-42ec-a945-5fd21dec0538
      weightTicketSetType:
        $ref: '#/definitions/WeightTicketSetType'
      vehicleNickname:
        type: string
        title: Vehicle nickname (ex. 'Large box truck')
        x-nullable: true
      vehicleMake:
        type: string
        title: Vehicle make
        x-nullable: true
      vehicleModel:
        type: string
        title: Vehicle model
        x-nullable: true
      emptyWeightTicketMissing:
        title: missing empty weight ticket
        type: boolean
      emptyWeight:
        title: empty weight ticket recorded weight
        type: integer
        minimum: 0
      fullWeightTicketMissing:
        title: missing full weight ticket
        type: boolean
      fullWeight:
        title: full weight ticket recorded weight
        type: integer
        minimum: 0
      weightTicketDate:
        title: Full Weight Ticket Date
        type: string
        format: date
        x-nullable: true
      trailerOwnershipMissing:
        title: missing trailer ownership documentation
        type: boolean
    required:
      - personallyProcurredMoveId
      - weightTicketSetType
      - fullWeightTicketMissing
      - emptyWeightTicketMissing
      - trailerOwnershipMissing
  OfficeUser:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      userId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      firstName:
        type: string
        example: John
        x-nullable: true
        title: First name
      middleName:
        type: string
        example: L.
        x-nullable: true
        title: Middle name
      lastName:
        type: string
        example: Donut
        x-nullable: true
        title: Last name
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal Email Address
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best contact phone
      transportationOffice:
        $ref: '#/definitions/TransportationOffice'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
  ServiceMember:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      userId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        example: '5789345789'
        pattern: '^\d{10}$'
        minLength: 10
        maxLength: 10
        x-nullable: true
        title: DoD ID number
      orders:
        type: array
        items:
          $ref: '#/definitions/Orders'
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      firstName:
        type: string
        example: John
        x-nullable: true
        title: First name
      middleName:
        type: string
        example: L.
        x-nullable: true
        title: Middle name
      lastName:
        type: string
        example: Donut
        x-nullable: true
        title: Last name
      suffix:
        type: string
        example: Jr.
        x-nullable: true
        title: Suffix
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best contact phone
      secondaryTelephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Secondary Phone
      personalEmail:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal Email Address
      phoneIsPreferred:
        type: boolean
        x-nullable: true
        title: Telephone
      emailIsPeferred:
        type: boolean
        x-nullable: true
        title: Email
      currentStation:
        $ref: '#/definitions/DutyStation'
      residentialAddress:
        $ref: '#/definitions/Address'
      backupMailingAddress:
        $ref: '#/definitions/Address'
      backupContacts:
        $ref: '#/definitions/IndexServiceMemberBackupContacts'
      isProfileComplete:
        type: boolean
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      requiresAccessCode:
        type: boolean
        x-nullable: false
        title: Requires Access Code
      weightAllotment:
        $ref: '#/definitions/WeightAllotment'
    required:
      - id
      - userId
      - isProfileComplete
      - createdAt
      - updatedAt
      - requiresAccessCode
  CreateServiceMember:
    type: object
    properties:
      userId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        pattern: '^\d{10}$'
        minLength: 10
        maxLength: 10
        example: '5789345789'
        x-nullable: true
        title: 'DoD ID number'
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      firstName:
        type: string
        example: John
        x-nullable: true
        title: First name
      middleName:
        type: string
        example: L.
        x-nullable: true
        title: Middle name
      lastName:
        type: string
        example: Donut
        x-nullable: true
        title: Last name
      suffix:
        type: string
        example: Jr.
        x-nullable: true
        title: Suffix
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best contact phone
      secondaryTelephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Alternate phone
      personalEmail:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal email
      phoneIsPreferred:
        type: boolean
        x-nullable: true
        title: Phone
      emailIsPreferred:
        type: boolean
        x-nullable: true
        title: Email
      currentStationId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      residentialAddress:
        $ref: '#/definitions/Address'
      backupMailingAddress:
        $ref: '#/definitions/Address'
  PatchServiceMember:
    type: object
    properties:
      userId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      edipi:
        type: string
        format: edipi
        pattern: '^\d{10}$'
        minLength: 10
        maxLength: 10
        example: '5789345789'
        x-nullable: true
        title: DoD ID number
      affiliation:
        $ref: '#/definitions/Affiliation'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      firstName:
        type: string
        example: John
        x-nullable: true
        title: First name
      middleName:
        type: string
        example: L.
        x-nullable: true
        title: Middle name
      lastName:
        type: string
        example: Donut
        x-nullable: true
        title: Last name
      suffix:
        type: string
        example: Jr.
        x-nullable: true
        title: Suffix
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Best Contact Phone
      secondaryTelephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Alternate Phone
      personalEmail:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Personal Email
      phoneIsPreferred:
        type: boolean
        x-nullable: true
        title: Phone
      emailIsPreferred:
        type: boolean
        x-nullable: true
        title: Email
      currentStationId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        x-nullable: true
      residentialAddress:
        $ref: '#/definitions/Address'
      backupMailingAddress:
        $ref: '#/definitions/Address'
  ServiceMemberBackupContact:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
        readOnly: true
      name:
        type: string
        example: Susan Smith
        x-nullable: true
        title: Name
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Phone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: Email
      permission:
        $ref: '#/definitions/BackupContactPermission'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - createdAt
      - updatedAt
      - name
      - email
      - permission
  BackupContactPermission:
    type: string
    enum:
      - NONE
      - VIEW
      - EDIT
    title: Permissions
    x-display-value:
      NONE: Contact Only
      VIEW: View all move details
      EDIT: View and edit all move details
  CreateServiceMemberBackupContact:
    type: object
    properties:
      name:
        type: string
        example: Susan Smith
        x-nullable: true
        title: Name
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
        title: Phone
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@exmaple.com
        x-nullable: true
        title: Email
      permission:
        $ref: '#/definitions/BackupContactPermission'
    required:
      - name
      - email
      - permission
  UpdateServiceMemberBackupContact:
    type: object
    properties:
      name:
        type: string
        example: Susan Smith
        x-nullable: true
      telephone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        example: 212-555-5555
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        example: john_bob@example.com
        x-nullable: true
        title: email address
      permission:
        $ref: '#/definitions/BackupContactPermission'
    required:
      - name
      - email
      - permission
  IndexServiceMemberBackupContacts:
    type: array
    items:
      $ref: '#/definitions/ServiceMemberBackupContact'
  SignedCertification:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      date:
        type: string
        format: date-time
        title: Date
      signature:
        type: string
        title: Signature
      certificationText:
        type: string
      moveId:
        type: string
        format: uuid
      personallyProcurredMoveId:
        type: string
        format: uuid
        x-nullable: true
      certificationType:
        $ref: '#/definitions/SignedCertificationType'
    required:
      - id
      - moveId
      - createdAt
      - updatedAt
      - date
      - signature
      - certificationText
  CreateSignedCertification:
    type: object
    properties:
      date:
        type: string
        format: date-time
        title: Date
      signature:
        type: string
        title: Signature
      certificationText:
        type: string
      personallyProcurredMoveId:
        type: string
        format: uuid
        x-nullable: true
      certificationType:
        $ref: '#/definitions/SignedCertificationTypeCreate'
    required:
      - date
      - signature
      - certificationText
  SignedCertifications:
    type: array
    items:
      $ref: '#/definitions/SignedCertification'
  SignedCertificationType:
    type: string
    enum:
      - PPM_PAYMENT
      - SHIPMENT
      - PPM
      - HHG
    x-nullable: true
  SignedCertificationTypeCreate:
    type: string
    enum:
      - PPM_PAYMENT
      - SHIPMENT
    x-nullable: true
  Document:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberId:
        type: string
        format: uuid
        title: The service member this document belongs to
      uploads:
        type: array
        items:
          $ref: '#/definitions/Upload'
    required:
      - id
      - serviceMemberId
      - uploads
  PostDocument:
    type: object
    properties:
      serviceMemberId:
        type: string
        format: uuid
        title: The service member this document belongs to
  Upload:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      url:
        type: string
        format: uri
        example: https://uploads.domain.test/dir/c56a4180-65aa-42ec-a945-5fd21dec0538
      filename:
        type: string
        example: filename.pdf
      contentType:
        type: string
        format: mime-type
        example: application/pdf
      bytes:
        type: integer
      status:
        type: string
        enum:
          - INFECTED
          - CLEAN
          - PROCESSING
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - url
      - filename
      - contentType
      - bytes
      - createdAt
      - updatedAt
  DPSAuthCookieURL:
    type: object
    properties:
      cookieUrl:
        type: string
        format: uri
  TShirtSize:
    type: string
    x-nullable: true
    title: Size
    enum:
      - S
      - M
      - L
  ServiceMemberRank:
    type: string
    x-nullable: true
    title: Rank
    enum:
      - E_1
      - E_2
      - E_3
      - E_4
      - E_5
      - E_6
      - E_7
      - E_8
      - E_9
      - O_1_ACADEMY_GRADUATE
      - O_2
      - O_3
      - O_4
      - O_5
      - O_6
      - O_7
      - O_8
      - O_9
      - O_10
      - W_1
      - W_2
      - W_3
      - W_4
      - W_5
      - AVIATION_CADET
      - CIVILIAN_EMPLOYEE
      - ACADEMY_CADET
      - MIDSHIPMAN
    x-display-value:
      E_1: E-1
      E_2: E-2
      E_3: E-3
      E_4: E-4
      E_5: E-5
      E_6: E-6
      E_7: E-7
      E_8: E-8
      E_9: E-9
      O_1_ACADEMY_GRADUATE: O-1/Service Academy Graduate
      O_2: O-2
      O_3: O-3
      O_4: O-4
      O_5: O-5
      O_6: O-6
      O_7: O-7
      O_8: O-8
      O_9: O-9
      O_10: O-10
      W_1: W-1
      W_2: W-2
      W_3: W-3
      W_4: W-4
      W_5: W-5
      AVIATION_CADET: Aviation Cadet
      CIVILIAN_EMPLOYEE: Civilian Employee
      ACADEMY_CADET: Service Academy Cadet
      MIDSHIPMAN: Midshipman
  DeptIndicator:
    type: string
    x-nullable: true
    title: Dept. indicator
    enum:
      - NAVY_AND_MARINES
      - ARMY
      - AIR_FORCE
      - COAST_GUARD
    x-display-value:
      NAVY_AND_MARINES: 17 Navy and Marine Corps
      ARMY: 21 Army
      AIR_FORCE: 57 Air Force
      COAST_GUARD: 70 Coast Guard
  Address:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      streetAddress1:
        type: string
        example: 123 Main Ave
        title: Street address 1
      streetAddress2:
        type: string
        example: Apartment 9000
        x-nullable: true
        title: Street address 2
      streetAddress3:
        type: string
        example: Montmârtre
        x-nullable: true
        title: Address Line 3
      city:
        type: string
        example: Anytown
        title: City
      state:
        title: State
        type: string
        x-display-value:
          AL: AL
          AK: AK
          AR: AR
          AZ: AZ
          CA: CA
          CO: CO
          CT: CT
          DC: DC
          DE: DE
          FL: FL
          GA: GA
          HI: HI
          IA: IA
          ID: ID
          IL: IL
          IN: IN
          KS: KS
          KY: KY
          LA: LA
          MA: MA
          MD: MD
          ME: ME
          MI: MI
          MN: MN
          MO: MO
          MS: MS
          MT: MT
          NC: NC
          ND: ND
          NE: NE
          NH: NH
          NJ: NJ
          NM: NM
          NV: NV
          NY: NY
          OH: OH
          OK: OK
          OR: OR
          PA: PA
          RI: RI
          SC: SC
          SD: SD
          TN: TN
          TX: TX
          UT: UT
          VA: VA
          VT: VT
          WA: WA
          WI: WI
          WV: WV
          WY: WY
        enum:
          - AL
          - AK
          - AR
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - GA
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MI
          - MN
          - MO
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VT
          - WA
          - WI
          - WV
          - WY
      postalCode:
        type: string
        format: zip
        title: ZIP
        example: '90210'
        pattern: '^(\d{5}([\-]\d{4})?)$'
      country:
        type: string
        title: Country
        x-nullable: true
        example: 'USA'
        default: USA
    required:
      - streetAddress1
      - city
      - state
      - postalCode
  CreateReimbursement:
    type: object
    x-nullable: true
    properties:
      requestedAmount:
        type: integer
        format: cents
        minimum: 1
        title: Requested Amount
        description: unit is cents
      methodOfReceipt:
        $ref: '#/definitions/MethodOfReceipt'
    required:
      - requestedAmount
      - methodOfReceipt
  Reimbursement:
    type: object
    x-nullable: true
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      requestedAmount:
        type: integer
        format: cents
        minimum: 1
        title: Requested Amount
        description: unit is cents
      methodOfReceipt:
        $ref: '#/definitions/MethodOfReceipt'
      status:
        $ref: '#/definitions/ReimbursementStatus'
      requestedDate:
        x-nullable: true
        type: string
        format: date
        title: Requested Date
    required:
      - requestedAmount
      - methodOfReceipt
  ReimbursementStatus:
    x-nullable: true
    type: string
    title: Reimbursement
    enum:
      - DRAFT
      - REQUESTED
      - APPROVED
      - REJECTED
      - PAID
  MethodOfReceipt:
    x-nullable: true
    type: string
    title: Method of Receipt
    enum:
      - MIL_PAY
      - OTHER_DD
      - GTCC
    x-display-value:
      MIL_PAY: MilPay
      OTHER_DD: Other account
      GTCC: GTCC
  MoveStatus:
    type: string
    title: Move status
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVED
      - CANCELED
      - 'NEEDS SERVICE COUNSELING'
    x-display-value:
      DRAFT: Draft
      SUBMITTED: Submitted
      APPROVED: Approved
      CANCELED: Canceled
  PPMStatus:
    type: string
    title: PPM status
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVED
      - COMPLETED
      - CANCELED
      - PAYMENT_REQUESTED
    x-display-value:
      DRAFT: Draft
      SUBMITTED: Submitted
      APPROVED: Approved
      COMPLETED: Completed
      CANCELED: Canceled
      PAYMENT_REQUESTED: Payment Requested
  OrdersStatus:
    type: string
    title: Move status
    enum:
      - DRAFT
      - SUBMITTED
      - APPROVED
      - CANCELED
    x-display-value:
      DRAFT: Draft
      SUBMITTED: Submitted
      APPROVED: Approved
      CANCELED: Canceled
  OrdersType:
    type: string
    title: Orders type
    enum:
      - PERMANENT_CHANGE_OF_STATION
      - RETIREMENT
      - SEPARATION
    x-display-value:
      PERMANENT_CHANGE_OF_STATION: Permanent Change Of Station (PCS)
      RETIREMENT: Retirement
      SEPARATION: Separation
  OrdersTypeDetail:
    type: string
    title: Orders type detail
    enum:
      - HHG_PERMITTED
      - PCS_TDY
      - HHG_RESTRICTED_PROHIBITED
      - HHG_RESTRICTED_AREA
      - INSTRUCTION_20_WEEKS
      - HHG_PROHIBITED_20_WEEKS
      - DELAYED_APPROVAL
    x-display-value:
      HHG_PERMITTED: Shipment of HHG Permitted
      PCS_TDY: PCS with TDY Enroute
      HHG_RESTRICTED_PROHIBITED: Shipment of HHG Restricted or Prohibited
      HHG_RESTRICTED_AREA: HHG Restricted Area-HHG Prohibited
      INSTRUCTION_20_WEEKS: Course of Instruction 20 Weeks or More
      HHG_PROHIBITED_20_WEEKS: Shipment of HHG Prohibited but Authorized within 20 weeks
      DELAYED_APPROVAL: Delayed Approval 20 Weeks or More
    x-nullable: true
  Orders:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      grade:
        type: string
        example: 'O-6'
        x-nullable: true
      issueDate:
        type: string
        description: The date and time that these orders were cut.
        format: date
        title: Date issued
      reportByDate:
        type: string
        description: Report By Date
        format: date
        title: Report by
      status:
        $ref: '#/definitions/OrdersStatus'
      ordersType:
        $ref: '#/definitions/OrdersType'
      ordersTypeDetail:
        $ref: '#/definitions/OrdersTypeDetail'
      hasDependents:
        type: boolean
        title: Are dependents included in your orders?
      spouseHasProGear:
        type: boolean
        title: Do you have a spouse who will need to move items related to their occupation (also known as spouse pro-gear)?
      originDutyStation:
        $ref: '#/definitions/DutyStation'
      newDutyStation:
        $ref: '#/definitions/DutyStation'
      uploadedOrders:
        $ref: '#/definitions/Document'
      moves:
        $ref: '#/definitions/IndexMoves'
      ordersNumber:
        type: string
        title: Orders Number
        x-nullable: true
        example: '030-00362'
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
      tac:
        type: string
        title: TAC
        example: 'F8J1'
        x-nullable: true
      sac:
        type: string
        title: SAC
        example: 'N002214CSW32Y9'
        x-nullable: true
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
      authorizedWeight:
        type: integer
        example: 7000
        x-nullable: true
    required:
      - id
      - serviceMemberId
      - issueDate
      - reportByDate
      - ordersType
      - hasDependents
      - spouseHasProGear
      - newDutyStation
      - uploadedOrders
      - createdAt
      - updatedAt
  CreateUpdateOrders:
    type: object
    properties:
      serviceMemberId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      issueDate:
        type: string
        description: The date and time that these orders were cut.
        format: date
        title: Orders date
      reportByDate:
        type: string
        description: Report By Date
        format: date
        title: Report-by date
      ordersType:
        $ref: '#/definitions/OrdersType'
      ordersTypeDetail:
        $ref: '#/definitions/OrdersTypeDetail'
      hasDependents:
        type: boolean
        title: Are dependents included in your orders?
      spouseHasProGear:
        type: boolean
        title: Do you have a spouse who will need to move items related to their occupation (also known as spouse pro-gear)?
      newDutyStationId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      ordersNumber:
        type: string
        title: Orders Number
        x-nullable: true
        example: '030-00362'
      tac:
        type: string
        title: TAC
        example: 'F8J1'
        x-nullable: true
      sac:
        type: string
        title: SAC
        example: 'N002214CSW32Y9'
        x-nullable: true
      departmentIndicator:
        $ref: '#/definitions/DeptIndicator'
    required:
      - serviceMemberId
      - issueDate
      - reportByDate
      - ordersType
      - hasDependents
      - spouseHasProGear
      - newDutyStationId
  InvalidRequestResponse:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          type: string
  MoveQueueItem:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      status:
        type: string
        example: APPROVED
      ppmStatus:
        type: string
        example: PAYMENT_REQUESTED
        x-nullable: true
      hhgStatus:
        type: string
        example: ACCEPTED
        x-nullable: true
      locator:
        type: string
        example: '12432'
      gblNumber:
        type: string
        example: 'LNK12345'
        title: GBL Number
        x-nullable: true
      customerName:
        type: string
        example: Thedog, Nino
        title: Customer Name
      edipi:
        type: string
        format: edipi
        pattern: '^\d{10}$'
        minLength: 10
        maxLength: 10
        example: '5789345789'
        title: 'DoD ID #'
      rank:
        $ref: '#/definitions/ServiceMemberRank'
      ordersType:
        type: string
        title: Move Type
        enum:
          - PCS - OCONUS
          - PCS - CONUS
          - PCS + TDY - OCONUS
          - PCS + TDY - CONUS
      moveDate:
        type: string
        format: date
        x-nullable: true
      submittedDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
        x-nullable: true
      lastModifiedDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
      createdAt:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
        readOnly: true
      originDutyStationName:
        type: string
        example: Dover AFB
        title: Origin
        x-nullable: true
      destinationDutyStationName:
        type: string
        example: Dover AFB
        title: Destination
        x-nullable: true
      pmSurveyConductedDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
        x-nullable: true
      originGbloc:
        type: string
        example: LKNQ
        title: Origin GBLOC
        x-nullable: true
      destinationGbloc:
        type: string
        example: LKNQ
        title: Destination GBLOC
        x-nullable: true
      deliveredDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
        x-nullable: true
      invoiceApprovedDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
        x-nullable: true
      weightAllotment:
        $ref: '#/definitions/WeightAllotment'
      branchOfService:
        type: string
      actualMoveDate:
        type: string
        format: date
        x-nullable: true
      originalMoveDate:
        type: string
        format: date
        x-nullable: true
    required:
      - id
      - status
      - locator
      - customerName
      - edipi
      - rank
      - ordersType
      - branchOfService
      - lastModifiedDate
      - createdAt
  MoveDatesSummary:
    type: object
    properties:
      id:
        type: string
        example: 'c56a4180-65aa-42ec-a945-5fd21dec0538:2018-09-25'
      moveId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      moveDate:
        type: string
        format: date
      pack:
        type: array
        items:
          type: string
          format: date
      pickup:
        type: array
        items:
          type: string
          format: date
      transit:
        type: array
        items:
          type: string
          format: date
      delivery:
        type: array
        items:
          type: string
          format: date
      report:
        type: array
        items:
          type: string
          format: date
    required:
      - id
      - moveId
      - moveDate
      - pack
      - pickup
      - transit
      - delivery
      - report
  AvailableMoveDates:
    type: object
    properties:
      startDate:
        type: string
        format: date
      available:
        type: array
        items:
          type: string
          format: date
    required:
      - startDate
      - available
  WeightAllotment:
    type: object
    properties:
      totalWeightSelf:
        type: integer
        example: 18000
      totalWeightSelfPlusDependents:
        type: integer
        example: 18000
      proGearWeight:
        type: integer
        example: 2000
      proGearWeightSpouse:
        type: integer
        example: 500
    required:
      - totalWeightSelf
      - totalWeightSelfPlusDependents
      - proGearWeight
      - proGearWeightSpouse
  IndexEntitlements:
    type: object
    additionalProperties:
      $ref: '#/definitions/WeightAllotment'
  RateEnginePostalCode:
    type: object
    properties:
      valid:
        type: boolean
        example: false
      postalCode:
        type: string
        description: zip code, international allowed
        format: zip
        title: ZIP
        example: "'90210' or 'N15 3NL'"
      postalCodeType:
        type: string
        enum:
          - origin
          - destination
    required:
      - valid
      - postalCode
      - postalCodeType
  AccessCode:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      serviceMemberId:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      code:
        type: string
        example: CODE456
      moveType:
        type: string
        title: Selected Move Type
        enum:
          - HHG
          - PPM
      createdAt:
        type: string
        format: date-time
        readOnly: true
      claimedAt:
        type: string
        format: date-time
        example: 2018-04-12T23:20:50.52Z
        description: when the access code was claimed or used
        x-nullable: true
    required:
      - id
      - code
      - moveType
      - createdAt
  Role:
    type: object
    properties:
      id:
        type: string
        format: uuid
        example: c56a4180-65aa-42ec-a945-5fd21dec0538
      roleType:
        type: string
        example: customer
      createdAt:
        type: string
        format: date-time
        readOnly: true
      updatedAt:
        type: string
        format: date-time
        readOnly: true
    required:
      - id
      - roleType
      - createdAt
      - updatedAt
  MTOAgentType:
    type: string
    title: MTO Agent Type
    example: RELEASING_AGENT
    enum:
      - RELEASING_AGENT
      - RECEIVING_AGENT
  MTOAgent:
    properties:
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        readOnly: true
        type: string
      mtoShipmentID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      firstName:
        type: string
        x-nullable: true
      lastName:
        type: string
        x-nullable: true
      email:
        type: string
        format: x-email
        pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        x-nullable: true
      phone:
        type: string
        format: telephone
        pattern: '^[2-9]\d{2}-\d{3}-\d{4}$'
        x-nullable: true
      agentType:
        $ref: '#/definitions/MTOAgentType'
    type: object
  MTOAgents:
    items:
      $ref: '#/definitions/MTOAgent'
    type: array
  MTOShipmentType:
    type: string
    title: Shipment Type
    example: HHG
    enum:
      - HHG
      - HHG_LONGHAUL_DOMESTIC
      - HHG_SHORTHAUL_DOMESTIC
      - HHG_INTO_NTS_DOMESTIC
      - HHG_OUTOF_NTS_DOMESTIC
    x-display-value:
      HHG: HHG
      INTERNATIONAL_HHG: International HHG
      INTERNATIONAL_UB: International UB
  MTOShipment:
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      id:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
        readOnly: true
      createdAt:
        format: date-time
        type: string
        readOnly: true
      updatedAt:
        format: date-time
        type: string
        readOnly: true
      requestedPickupDate:
        format: date
        type: string
        readOnly: true
        x-nullable: true
      requestedDeliveryDate:
        format: date
        type: string
        readOnly: true
        x-nullable: true
      agents:
        $ref: '#/definitions/MTOAgents'
      customerRemarks:
        type: string
        readOnly: true
        example: handle with care
        x-nullable: true
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      status:
        $ref: '#/definitions/MTOShipmentStatus'
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      secondaryPickupAddress:
        $ref: '#/definitions/Address'
      secondaryDeliveryAddress:
        $ref: '#/definitions/Address'
      eTag:
        type: string
        readOnly: true
  MTOShipments:
    items:
      $ref: '#/definitions/MTOShipment'
    type: array
  MTOShipmentStatus:
    type: string
    readOnly: true
    enum:
      - DRAFT
      - APPROVED
      - SUBMITTED
      - REJECTED
  CreateShipment:
    type: object
    properties:
      moveTaskOrderID:
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      requestedPickupDate:
        format: date
        type: string
      requestedDeliveryDate:
        format: date
        type: string
      customerRemarks:
        type: string
        example: handle with care
        x-nullable: true
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      agents:
        $ref: '#/definitions/MTOAgents'
    required:
      - moveTaskOrderID
      - shipmentType
  UpdateShipment:
    type: object
    properties:
      status:
        $ref: '#/definitions/MTOShipmentStatus'
      shipmentType:
        $ref: '#/definitions/MTOShipmentType'
      requestedPickupDate:
        format: date
        type: string
      requestedDeliveryDate:
        format: date
        type: string
      customerRemarks:
        type: string
        example: handle with care
        x-nullable: true
      pickupAddress:
        $ref: '#/definitions/Address'
      destinationAddress:
        $ref: '#/definitions/Address'
      agents:
        $ref: '#/definitions/MTOAgents'
  ClientError:
    type: object
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
      - instance
  ValidationError:
    allOf:
      - $ref: '#/definitions/ClientError'
      - type: object
    properties:
      invalidFields:
        type: object
        additionalProperties:
          description: List of errors for the field
          type: array
          items:
            type: string
    required:
      - invalidFields
  Error:
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
    type: object
paths:
  /estimates/ppm:
    get:
      summary: Return a PPM cost estimate
      description: Calculates a reimbursement range for a PPM move (excluding SIT)
      operationId: showPPMEstimate
      tags:
        - ppm
      parameters:
        - in: query
          name: originalMoveDate
          type: string
          format: date
          required: true
        - in: query
          name: originZip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: originDutyStationZip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: ordersId
          type: string
          format: uuid
          required: true
        - in: query
          name: weightEstimate
          type: integer
          required: true
      responses:
        '200':
          description: Made estimate of PPM cost range
          schema:
            $ref: '#/definitions/PPMEstimateRange'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: ppm discount not found for provided postal codes and original move date
        '409':
          description: distance is less than 50 miles (no short haul moves)
        '422':
          description: cannot process request with given information
        '500':
          description: internal server error
  /estimates/ppm-sit:
    get:
      summary: Return a PPM move's SIT cost estimate
      description: Calculates a reimbursment for a PPM move's SIT
      operationId: showPPMSitEstimate
      tags:
        - ppm
      parameters:
        - in: query
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
        - in: query
          name: originalMoveDate
          type: string
          format: date
          required: true
        - in: query
          name: daysInStorage
          type: integer
          required: true
        - in: query
          name: originZip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: ordersId
          type: string
          format: uuid
          required: true
        - in: query
          name: weightEstimate
          type: integer
          required: true
      responses:
        '200':
          description: show PPM SIT estimate
          schema:
            $ref: '#/definitions/PPMSitEstimate'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '409':
          description: distance is less than 50 miles (no short haul moves)
        '422':
          description: the payload was unprocessable
        '500':
          description: internal server error
  /users/logged-in:
    get:
      summary: Returns the user info for the currently logged in user
      description: Returns the user info for the currently logged in user
      operationId: showLoggedInUser
      tags:
        - users
      responses:
        '200':
          description: Currently logged in user
          schema:
            $ref: '#/definitions/LoggedInUser'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '500':
          description: server error
  /users/is-logged-in:
    get:
      summary: Returns boolean as to whether the user is logged in
      description: Returns boolean as to whether the user is logged in
      operationId: isLoggedInUser
      tags:
        - users
      responses:
        '200':
          description: Currently logged in user
          schema:
            type: boolean
        '400':
          description: invalid request
        '500':
          description: server error
  /orders:
    post:
      summary: Creates an orders model for a logged-in user
      description: Creates an instance of orders tied to a service member
      operationId: createOrders
      tags:
        - orders
      parameters:
        - in: body
          name: createOrders
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateOrders'
      responses:
        '201':
          description: created instance of orders
          schema:
            $ref: '#/definitions/Orders'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /orders/{ordersId}:
    put:
      summary: Updates orders
      description: All fields sent in this request will be set on the orders referenced
      operationId: updateOrders
      tags:
        - orders
      parameters:
        - in: path
          name: ordersId
          type: string
          format: uuid
          required: true
          description: UUID of the orders model
        - in: body
          name: updateOrders
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateOrders'
      responses:
        '200':
          description: updated instance of orders
          schema:
            $ref: '#/definitions/Orders'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: orders not found
        '500':
          description: internal server error
    get:
      summary: Returns the given order
      description: Returns the given order
      operationId: showOrders
      tags:
        - orders
      parameters:
        - in: path
          name: ordersId
          type: string
          format: uuid
          required: true
          description: UUID of the order
      responses:
        '200':
          description: the instance of the order
          schema:
            $ref: '#/definitions/Orders'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: order is not found
        '500':
          description: internal server error
  /moves/{moveId}:
    patch:
      summary: Patches the move
      description: Any fields sent in this request will be set on the move referenced
      operationId: patchMove
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: patchMove
          required: true
          schema:
            $ref: '#/definitions/PatchMove'
      responses:
        '201':
          description: updated instance of move
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move is not found
        '500':
          description: internal server error
    get:
      summary: Returns the given move
      description: Returns the given move
      operationId: showMove
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        '200':
          description: the instance of the move
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move is not found
        '500':
          description: internal server error
  /moves/{moveId}/signed-certifications:
    post:
      summary: Submits signed certification for the given move ID
      description: Create an instance of signed-certification tied to the move ID
      operationId: createSignedCertification
      tags:
        - certification
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move being signed for
        - in: body
          name: createSignedCertification
          required: true
          schema:
            $ref: '#/definitions/CreateSignedCertification'
      responses:
        '201':
          description: created instance of signed-certification
          schema:
            $ref: '#/definitions/SignedCertification'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized to sign for this move
        '404':
          description: move not found
        '500':
          description: internal server error
    get:
      summary: gets the signed certifications for the given move ID
      description: returns a list of all signed-certifications associated with the move ID
      operationId: indexSignedCertification
      tags:
        - certification
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: returns a list of signed certifications
          schema:
            $ref: '#/definitions/SignedCertifications'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move not found
        '500':
          description: internal server error
  /moves/{moveId}/personally-procured-move:
    post:
      summary: Creates a new PPM for the given move
      description: Create an instance of personally-procured-move tied to the move ID
      operationId: createPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move this PPM is associated with
        - in: body
          name: createPersonallyProcuredMove
          required: true
          schema:
            $ref: '#/definitions/CreatePersonallyProcuredMove'
      responses:
        '201':
          description: created instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move not found
        '500':
          description: server error
    get:
      summary: Returns a list of all PPMs associated with this move
      description: Returns a list of all PPMs associated with this move
      operationId: indexPersonallyProcuredMoves
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move these PPMs are associated with
      responses:
        '200':
          description: returns list of personally-procured-move
          schema:
            $ref: '#/definitions/IndexPersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
  /moves/{moveId}/personally-procured-move/{personallyProcuredMoveId}/estimate:
    patch:
      summary: Calculates the estimated incentive of a PPM
      description: This request calculates the estimated incentive of a PPM and attaches this range to the PPM
      operationId: updatePersonallyProcuredMoveEstimate
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being patched
      responses:
        '200':
          description: updated instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: ppm is not found or ppm discount not found for provided postal codes and original move date
        '422':
          description: cannot process request with given information
        '500':
          description: internal server error
  /moves/{moveId}/personally-procured-move/{personallyProcuredMoveId}:
    put:
      summary: Updates the PPM
      description: This replaces the current version of the PPM with the version sent.
      operationId: updatePersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being updated
        - in: body
          name: UpdatePersonallyProcuredMove
          required: true
          schema:
            $ref: '#/definitions/UpdatePersonallyProcuredMove'
      responses:
        '200':
          description: updated instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
    patch:
      summary: Patches the PPM
      description: Any fields sent in this request will be set on the PPM referenced
      operationId: patchPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being patched
        - in: body
          name: patchPersonallyProcuredMove
          required: true
          schema:
            $ref: '#/definitions/PatchPersonallyProcuredMove'
      responses:
        '200':
          description: updated instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: ppm is not found or ppm discount not found for provided postal codes and original move date
        '422':
          description: cannot process request with given information
        '500':
          description: internal server error
    get:
      summary: Returns the given PPM
      description: Returns the given PPM
      operationId: showPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move being signed for
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM
      responses:
        '200':
          description: the instance of personally-procured-move
          schema:
            $ref: '#/definitions/IndexPersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
  /personally-procured-move/{personallyProcuredMoveId}/submit:
    post:
      summary: Submits a PPM for approval
      description: Submits a PPM for approval by the office. The status of the PPM will be updated to SUBMITTED
      operationId: submitPersonallyProcuredMove
      tags:
        - ppm
      parameters:
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being submitted
        - name: submitPersonallyProcuredMove
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmitPersonallyProcuredMove'
      responses:
        '200':
          description: updated instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: ppm is not found
        '500':
          description: internal server error
  /personally-procured-move/{personallyProcuredMoveId}/expense-summary:
    get:
      summary: Returns an expense summary organized by expense type
      description: Calculates and returns an expense summary organized by expense type
      operationId: requestPPMExpenseSummary
      tags:
        - ppm
      parameters:
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM
      responses:
        '200':
          description: Successfully calculated expense summary
          schema:
            $ref: '#/definitions/ExpenseSummary'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: personally procured move not found
        '500':
          description: server error
  /personally-procured-move/{personallyProcuredMoveId}/request-payment:
    post:
      summary: Moves the PPM and the move into the PAYMENT_REQUESTED state
      description: Moves the PPM and the move into the PAYMENT_REQUESTED state
      operationId: requestPPMPayment
      tags:
        - ppm
      parameters:
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM
      responses:
        '200':
          description: Sucesssfully requested payment
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move not found
        '500':
          description: server error
  /reimbursement/{reimbursementId}/approve:
    post:
      summary: Approves the reimbursement
      description: Sets the status of the reimbursement to APPROVED.
      operationId: approveReimbursement
      tags:
        - office
      parameters:
        - in: path
          name: reimbursementId
          type: string
          format: uuid
          required: true
          description: UUID of the reimbursement being approved
      responses:
        '200':
          description: updated instance of reimbursement
          schema:
            $ref: '#/definitions/Reimbursement'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /moves/{moveId}/orders:
    get:
      summary: Returns orders information for a move for office use
      description: Returns orders information for a move for office use
      operationId: showOfficeOrders
      tags:
        - office
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        '200':
          description: the orders information for a move for office use
          schema:
            $ref: '#/definitions/Orders'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move not found
        '500':
          description: internal server error
  /moves/{moveId}/move-documents:
    get:
      summary: Returns a list of all Move Documents associated with this move
      description: Returns a list of all Move Documents associated with this move
      operationId: indexMoveDocuments
      tags:
        - move-docs
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        '200':
          description: returns list of move douments
          schema:
            $ref: '#/definitions/MoveDocuments'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
    post:
      summary: Creates a move document
      description: Created a move document with the given information
      operationId: createGenericMoveDocument
      tags:
        - move-docs
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: createGenericMoveDocument
          required: true
          schema:
            $ref: '#/definitions/CreateGenericMoveDocument'
      responses:
        '200':
          description: returns new move document object
          schema:
            $ref: '#/definitions/MoveDocument'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to modify this move
        '500':
          description: server error
  /move-documents/{moveDocumentId}:
    put:
      summary: Updates a move document
      description: Update a move document with the given information
      operationId: updateMoveDocument
      tags:
        - move-docs
      parameters:
        - in: path
          name: moveDocumentId
          type: string
          format: uuid
          required: true
          description: UUID of the move document model
        - in: body
          name: updateMoveDocument
          required: true
          schema:
            $ref: '#/definitions/MoveDocument'
      responses:
        '200':
          description: updated instance of move document
          schema:
            $ref: '#/definitions/MoveDocument'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: move document not found
        '500':
          description: internal server error
    delete:
      summary: Deletes a move document
      description: Deletes a move document with the given information
      operationId: deleteMoveDocument
      tags:
        - move-docs
      parameters:
        - in: path
          name: moveDocumentId
          type: string
          format: uuid
          required: true
          description: UUID of the move document model
      responses:
        '204':
          description: deleted
        '400':
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponse'
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: server error
  /moves/{moveId}/moving-expense-documents:
    post:
      summary: Creates a moving expense document
      description: Created a moving expense document with the given information
      operationId: createMovingExpenseDocument
      tags:
        - move-docs
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: createMovingExpenseDocument
          required: true
          schema:
            $ref: '#/definitions/CreateMovingExpenseDocument'
      responses:
        '200':
          description: returns new moving expense document object
          schema:
            $ref: '#/definitions/MoveDocument'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to modify this move
        '500':
          description: server error
  /moves/{moveId}/approve:
    post:
      summary: Approves a move to proceed
      description: Approves the basic details of a move. The status of the move will be updated to APPROVED
      operationId: approveMove
      tags:
        - office
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        '200':
          description: returns updated (approved) move object
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to approve this move
        '409':
          description: the move is not in a state to be approved
          schema:
            $ref: '#/definitions/Move'
        '500':
          description: server error
  /moves/{moveId}/submit:
    post:
      summary: Submits a move for approval
      description: Submits a move for approval by the office. The status of the move will be updated to SUBMITTED
      operationId: submitMoveForApproval
      tags:
        - moves
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - name: submitMoveForApproval
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmitMoveForApproval'
      responses:
        '200':
          description: returns updated (submitted) move object
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to approve this move
        '409':
          description: the move is not in a state to be approved
          schema:
            $ref: '#/definitions/Move'
        '500':
          description: server error
  /moves/{moveId}/cancel:
    post:
      summary: Cancels a move
      description: Cancels the basic details of a move. The status of the move will be updated to CANCELED
      operationId: cancelMove
      tags:
        - office
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: cancelMove
          required: true
          schema:
            $ref: '#/definitions/CancelMove'
      responses:
        '200':
          description: returns updated (canceled) move object
          schema:
            $ref: '#/definitions/Move'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to cancel this move
        '409':
          description: the move is not in a state to be canceled
          schema:
            $ref: '#/definitions/Move'
        '500':
          description: server error
  /moves/{moveId}/move-dates-summary:
    get:
      summary: Returns projected move-related dates for a given move date
      description: Returns projected move-related dates for a given move date
      operationId: showMoveDatesSummary
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: query
          name: moveDate
          type: string
          format: date
          required: true
          description: The chosen move date
      responses:
        '200':
          description: List of projected move-related dates
          schema:
            $ref: '#/definitions/MoveDatesSummary'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /moves/{moveId}/shipment-summary-worksheet:
    get:
      summary: Returns Shipment Summary Worksheet
      description: Generates pre-filled PDF using data already collected
      operationId: showShipmentSummaryWorksheet
      tags:
        - moves
      parameters:
        - in: path
          name: moveId
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: query
          name: preparationDate
          type: string
          format: date
          required: true
          description: The preparationDate of PDF
      produces:
        - application/pdf
      responses:
        '200':
          headers:
            Content-Disposition:
              type: string
              description: File name to download
          description: Pre-filled worksheet PDF
          schema:
            format: binary
            type: file
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /personally-procured-moves/{personallyProcuredMoveId}/create-ppm-attachments:
    post:
      summary: Creates PPM attachments PDF
      description: Creates a PPM attachments PDF
      operationId: createPPMAttachments
      tags:
        - ppm
      parameters:
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM to create an attachments PDF for
        - name: docTypes
          in: query
          type: array
          required: true
          items:
            type: string
            enum: *MOVEDOCUMENTTYPE
          collectionFormat: csv
          description: Restrict the list to documents with matching docType.
      responses:
        '200':
          description: returns a PPM attachments upload
          schema:
            $ref: '#/definitions/Upload'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to perform this action
        '413':
          description: payload is too large
        '422':
          description: malformed PDF contained in uploads
        '424':
          description: no files to be processed into attachments PDF
        '500':
          description: server error
  /personally-procured-moves/{personallyProcuredMoveId}/approve:
    post:
      summary: Approves the PPM
      description: Sets the status of the PPM to APPROVED.
      operationId: approvePPM
      tags:
        - office
      parameters:
        - in: path
          name: personallyProcuredMoveId
          type: string
          format: uuid
          required: true
          description: UUID of the PPM being updated
        - name: ApprovePersonallyProcuredMove
          in: body
          required: true
          schema:
            $ref: '#/definitions/ApprovePersonallyProcuredMove'
      responses:
        '200':
          description: updated instance of personally-procured-move
          schema:
            $ref: '#/definitions/PersonallyProcuredMove'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /personally-procured-moves/incentive:
    get:
      summary: Return a PPM incentive value
      description: Calculates incentive for a PPM move (excluding SIT)
      operationId: showPPMIncentive
      tags:
        - ppm
      parameters:
        - in: query
          name: originalMoveDate
          type: string
          format: date
          required: true
        - in: query
          name: originZip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: originDutyStationZip
          type: string
          format: zip
          pattern: '^(\d{5}([\-]\d{4})?)$'
          required: true
        - in: query
          name: ordersId
          type: string
          format: uuid
          required: true
        - in: query
          name: weight
          type: integer
          required: true
      responses:
        '200':
          description: Made calculation of PPM incentive
          schema:
            $ref: '#/definitions/PPMIncentive'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '409':
          description: distance is less than 50 miles (no short haul moves)
        '500':
          description: internal server error
  /documents:
    post:
      summary: Create a new document
      description: Documents represent a physical artifact such as a scanned document or a PDF file
      operationId: createDocument
      tags:
        - documents
      parameters:
        - in: body
          name: document
          required: true
          schema:
            $ref: '#/definitions/PostDocument'
      responses:
        '201':
          description: created document
          schema:
            $ref: '#/definitions/Document'
        '400':
          description: invalid request
        '500':
          description: server error
  /documents/{documentId}:
    get:
      summary: Returns a document
      description: Returns a document and its uploads
      operationId: showDocument
      tags:
        - documents
      parameters:
        - in: path
          name: documentId
          type: string
          format: uuid
          required: true
          description: UUID of the document to return
      responses:
        '200':
          description: the requested document
          schema:
            $ref: '#/definitions/Document'
        '400':
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponse'
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: server error
  /uploads/{uploadId}:
    delete:
      summary: Deletes an upload
      description: Uploads represent a single digital file, such as a JPEG or PDF.
      operationId: deleteUpload
      tags:
        - uploads
      parameters:
        - in: path
          name: uploadId
          type: string
          format: uuid
          required: true
          description: UUID of the upload to be deleted
      responses:
        '204':
          description: deleted
        '400':
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponse'
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: server error
  /uploads:
    post:
      summary: Create a new upload
      description: Uploads represent a single digital file, such as a JPEG or PDF.
      operationId: createUpload
      tags:
        - uploads
      consumes:
        - multipart/form-data
      parameters:
        - in: query
          name: documentId
          type: string
          format: uuid
          required: false
          description: UUID of the document to add an upload to
        - in: formData
          name: file
          type: file
          description: The file to upload.
          required: true
      responses:
        '201':
          description: created upload
          schema:
            $ref: '#/definitions/Upload'
        '400':
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponse'
        '403':
          description: not authorized
        '404':
          description: not found
        '413':
          description: payload is too large
        '500':
          description: server error
    delete:
      summary: Deletes a collection of uploads
      description: Uploads represent a single digital file, such as a JPEG or PDF.
      operationId: deleteUploads
      tags:
        - uploads
      parameters:
        - in: query
          name: uploadIds
          type: array
          items:
            type: string
            format: uuid
          required: true
          description: Array of UUIDs to be deleted
      responses:
        '204':
          description: deleted
        '400':
          description: invalid request
          schema:
            $ref: '#/definitions/InvalidRequestResponse'
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: server error
  /service-members:
    post:
      summary: Creates service member for a logged-in user
      description: Creates an instance of a service member tied to a user
      operationId: createServiceMember
      tags:
        - service-members
      parameters:
        - in: body
          name: createServiceMember
          required: true
          schema:
            $ref: '#/definitions/CreateServiceMember'
      responses:
        '201':
          description: created instance of service member
          schema:
            $ref: '#/definitions/ServiceMember'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: service member not found
        '500':
          description: internal server error
  /service-members/{serviceMemberId}:
    get:
      summary: Returns the given service member
      description: Returns the given service member
      operationId: showServiceMember
      tags:
        - service-members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        '200':
          description: the instance of the service member
          schema:
            $ref: '#/definitions/ServiceMember'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: service member not found
        '500':
          description: internal server error
    patch:
      summary: Patches the service member
      description: Any fields sent in this request will be set on the service member referenced
      operationId: patchServiceMember
      tags:
        - service-members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
        - in: body
          name: patchServiceMember
          required: true
          schema:
            $ref: '#/definitions/PatchServiceMember'
      responses:
        '200':
          description: updated instance of service member
          schema:
            $ref: '#/definitions/ServiceMember'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: service member not found
        '500':
          description: internal server error
  /service-members/{serviceMemberId}/current-orders:
    get:
      summary: Returns the latest orders for a given service member
      description: Returns orders
      operationId: showServiceMemberOrders
      tags:
        - service-members
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        '200':
          description: the instance of the service member
          schema:
            $ref: '#/definitions/Orders'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: service member not found
        '500':
          description: internal server error
  /service-members/{serviceMemberId}/backup-contacts:
    post:
      summary: Submits backup contact for a logged-in user
      description: Creates an instance of a backup contact tied to a service member user
      operationId: createServiceMemberBackupContact
      tags:
        - backup-contacts
      parameters:
        - in: body
          name: createBackupContact
          required: true
          schema:
            $ref: '#/definitions/CreateServiceMemberBackupContact'
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        '201':
          description: created instance of service member backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContact'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized to create this backup contact
        '404':
          description: contact not found
        '500':
          description: internal server error
    get:
      summary: List all service member backup contacts
      description: List all service member backup contacts
      operationId: indexServiceMemberBackupContacts
      tags:
        - backup-contacts
      parameters:
        - in: path
          name: serviceMemberId
          type: string
          format: uuid
          required: true
          description: UUID of the service member
      responses:
        '200':
          description: list of service member backup contacts
          schema:
            $ref: '#/definitions/IndexServiceMemberBackupContacts'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized to see this backup contact
        '404':
          description: contact not found
        '500':
          description: internal server error
  /backup-contacts/{backupContactId}:
    get:
      summary: Returns the given service member backup contact
      description: Returns the given service member backup contact
      operationId: showServiceMemberBackupContact
      tags:
        - backup-contacts
      parameters:
        - in: path
          name: backupContactId
          type: string
          format: uuid
          required: true
          description: UUID of the service member backup contact
      responses:
        '200':
          description: the instance of the service member backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContact'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: backup contact not found
        '500':
          description: internal server error
    put:
      summary: Updates a service member backup contact
      description: Any fields sent in this request will be set on the backup contact referenced
      operationId: updateServiceMemberBackupContact
      tags:
        - backup-contacts
      parameters:
        - in: body
          name: updateServiceMemberBackupContact
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceMemberBackupContact'
        - in: path
          name: backupContactId
          type: string
          format: uuid
          required: true
          description: UUID of the service member backup contact
      responses:
        '201':
          description: updated instance of backup contact
          schema:
            $ref: '#/definitions/ServiceMemberBackupContact'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: backup contact not found
        '500':
          description: internal server error
  /duty-stations:
    get:
      summary: Returns the duty stations matching the search query
      description: Returns the duty stations matching the search query
      operationId: searchDutyStations
      tags:
        - duty-stations
      parameters:
        - in: query
          name: search
          type: string
          required: true
          description: Search string for duty stations
      responses:
        '200':
          description: the instance of the duty station
          schema:
            $ref: '#/definitions/DutyStations'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: matching duty station not found
        '500':
          description: internal server error
  /duty-stations/{dutyStationId}/transportation-office:
    get:
      summary: Returns the transportation office for a given duty station
      description: Returns the given duty station's transportation office
      operationId: showDutyStationTransportationOffice
      tags:
        - transportation-offices
      parameters:
        - in: path
          name: dutyStationId
          type: string
          format: uuid
          required: true
          description: UUID of the duty station
      responses:
        '200':
          description: the instance of the transportation office for a duty station
          schema:
            $ref: '#/definitions/TransportationOffice'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '404':
          description: transportation office not found
        '500':
          description: internal server error
  /queues/{queueType}:
    get:
      summary: Show all moves in a queue
      description: Show all moves in a queue
      operationId: showQueue
      tags:
        - queues
      parameters:
        - in: path
          name: queueType
          type: string
          enum:
            - NEW
            - PPM_PAYMENT_REQUESTED
            - ALL
            - PPM_APPROVED
            - PPM_COMPLETED
          required: true
          description: Queue type to show
      responses:
        '200':
          description: list all moves in the specified queue
          schema:
            type: array
            items:
              $ref: '#/definitions/MoveQueueItem'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized to access this queue
        '404':
          description: move queue item is not found
  /entitlements:
    get:
      summary: List weight weights allotted by entitlement
      description: List weight weights allotted by entitlement
      operationId: indexEntitlements
      tags:
        - entitlements
      responses:
        '200':
          description: List of weights allotted entitlement
          schema:
            $ref: '#/definitions/IndexEntitlements'
  /entitlements/{moveId}:
    get:
      summary: Validates that the stored weight estimate is below the allotted entitlement range for a service member
      description: Determine whether weight estimate is below entitlement
      operationId: validateEntitlement
      tags:
        - entitlements
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
      responses:
        '200':
          description: weight estimate is below allotted entitlement
        '404':
          description: personally procured move not found
        '409':
          description: Requested weight estimate is above allotted entitlement
  /calendar/available-move-dates:
    get:
      summary: Returns available dates for the move calendar
      description: Returns available dates for the move calendar
      operationId: showAvailableMoveDates
      tags:
        - calendar
      parameters:
        - in: query
          name: startDate
          type: string
          format: date
          required: true
          description: Look for future available dates starting from (and including) this date
      responses:
        '200':
          description: List of available dates
          schema:
            $ref: '#/definitions/AvailableMoveDates'
        '400':
          description: invalid request
        '401':
          description: request requires user authentication
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /dps-auth/cookie-url:
    post:
      summary: Returns the URL to redirect to that begins DPS auth
      description: Returns the URL to redirect to that begins DPS auth
      operationId: getCookieURL
      tags:
        - dps-auth
      parameters:
        - in: query
          name: cookieName
          type: string
          description: The name of the cookie to set, DPS by default
          required: false
        - in: query
          name: dpsRedirectUrl
          type: string
          description: The DPS URL to redirec to
          required: false
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DPSAuthCookieURL'
        '400':
          description: invalid request
        '403':
          description: user is not authorized
        '500':
          description: internal server error
  /moves/{moveId}/weight-ticket:
    post:
      summary: Creates a weight ticket document
      description: Created a weight ticket document with the given information
      operationId: createWeightTicketDocument
      tags:
        - move-docs
      parameters:
        - name: moveId
          in: path
          type: string
          format: uuid
          required: true
          description: UUID of the move
        - in: body
          name: createWeightTicketDocument
          required: true
          schema:
            $ref: '#/definitions/CreateWeightTicketDocuments'
      responses:
        '200':
          description: returns new weight ticket document object
          schema:
            $ref: '#/definitions/MoveDocument'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: not authorized to modify this move
        '500':
          description: server error
  /rate-engine-postal-codes/{postalCode}:
    get:
      summary: Validate if a zipcode is valid for origin or destination location for a move.
      description: Verifies if a zipcode is valid for origin or destination location for a move.
      operationId: validatePostalCodeWithRateData
      tags:
        - postal-codes
      parameters:
        - in: path
          name: postalCode
          type: string
          required: true
          format: zip
          pattern: '^(\d{5}?)$'
        - in: query
          name: postalCodeType
          type: string
          required: true
          enum:
            - origin
            - destination
      responses:
        '200':
          description: postalCode is valid or invalid
          schema:
            $ref: '#/definitions/RateEnginePostalCode'
        '400':
          description: invalid request
        '401':
          description: must be authenticated to use this endpoint
        '403':
          description: user is not authorized
        '500':
          description: server error
  /access-codes:
    get:
      summary: Fetches an access code
      description: Fetches the access code for a service member.
      operationId: fetchAccessCode
      tags:
        - accesscode
      responses:
        '200':
          description: access code has been found in system
          schema:
            $ref: '#/definitions/AccessCode'
        '400':
          description: invalid request
        '401':
          description: not authorized to fetch access code
        '404':
          description: access code not found in system
        '500':
          description: server error
  /access-codes/valid:
    get:
      summary: Validate if an access code has been unused and associated with the correct move type.
      description: Verifies if access code is both unused and correctly associated with a move type.
      operationId: validateAccessCode
      tags:
        - accesscode
      parameters:
        - in: query
          name: code
          type: string
          description: the code the access code represents and verifies if in use
          pattern: '^(HHG|PPM)-[A-Z0-9]{6}$'
          x-nullable: false
      responses:
        '200':
          description: access code is invalid or valid
          schema:
            $ref: '#/definitions/AccessCode'
        '400':
          description: invalid request
        '401':
          description: not authorized to validate access code
        '404':
          description: access code not found in system
        '500':
          description: server error
  /access-codes/invalid:
    patch:
      summary: Updates access code as invalid by associating it with the current service member.
      description: Updates access code as invalid by associating it with the current service member.
      operationId: claimAccessCode
      tags:
        - accesscode
      parameters:
        - in: body
          name: accessCode
          description: the code the access code represents and verifies if in use
          required: true
          schema:
            type: object
            required:
              - code
            properties:
              code:
                type: string
      responses:
        '200':
          description: access code is invalid or valid
          schema:
            $ref: '#/definitions/AccessCode'
        '400':
          description: invalid request
        '401':
          description: not authorized to validate access code
        '404':
          description: access code not found in system
        '500':
          description: server error
  /addresses/{addressId}:
    get:
      summary: Returns an address
      description: Returns an address
      operationId: showAddress
      tags:
        - addresses
      parameters:
        - in: path
          name: addressId
          type: string
          format: uuid
          required: true
          description: UUID of the address to return
      responses:
        '200':
          description: the requested address
          schema:
            $ref: '#/definitions/Address'
        '400':
          description: invalid request
        '403':
          description: not authorized
        '404':
          description: not found
        '500':
          description: server error
  '/mto-shipments':
    post:
      summary: createMTOShipment
      description: |
        Creates a MTO shipment for the specified Move Task Order.
        Required fields include:
        * Shipment Type
        * Customer requested pick-up date
        * Pick-up Address
        * Delivery Address

        Optional fields include:
        * Customer Remarks
        * Releasing / Receiving agents
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createMTOShipment
      tags:
        - mtoShipment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateShipment'
      responses:
        '200':
          description: Successfully created a MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  '/mto-shipments/{mtoShipmentId}':
    patch:
      summary: updateMTOShipment
      description: |
        Updates a specified MTO shipment.

        Required fields include:
        * MTO Shipment ID required in path
        * If-Match required in headers
        * No fields required in body

        Optional fields include:
        * New shipment status type
        * Shipment Type
        * Customer requested pick-up date
        * Pick-up Address
        * Delivery Address
        * Customer Remarks
        * Releasing / Receiving agents
      consumes:
        - application/json
      produces:
        - application/json
      operationId: updateMTOShipment
      tags:
        - mtoShipment
      parameters:
        - in: path
          name: mtoShipmentId
          type: string
          format: uuid
          required: true
          description: UUID of the MTO Shipment to update
        - in: header
          name: If-Match
          type: string
          required: true
          description: >
            Optimistic locking is implemented via the `If-Match` header. If the ETag header does not match
            the value of the resource on the server, the server rejects the change with a `412 Precondition Failed` error.
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateShipment'
      responses:
        '200':
          description: Successfully updated the specified MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '403':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '412':
          $ref: '#/responses/PreconditionFailed'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/ServerError'
  /moves/{moveTaskOrderID}/mto-shipments:
    get:
      summary: Gets all shipments for a move task order
      description: |
        Gets all MTO shipments for the specified Move Task Order.
      produces:
        - application/json
      operationId: listMTOShipments
      tags:
        - mtoShipment
      parameters:
        - description: ID of move task order for mto shipment to use
          in: path
          name: moveTaskOrderID
          required: true
          format: uuid
          type: string
      responses:
        '200':
          description: Successfully retrieved all mto shipments for a move task order.
          schema:
            $ref: '#/definitions/MTOShipments'
        '400':
          $ref: '#/responses/InvalidRequest'
        '401':
          $ref: '#/responses/PermissionDenied'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'
responses:
  InvalidRequest:
    description: The request payload is invalid.
    schema:
      $ref: '#/definitions/ClientError'
  NotFound:
    description: The requested resource wasn't found.
    schema:
      $ref: '#/definitions/ClientError'
  Conflict:
    description: 'The request could not be processed because of conflict in the current state of the resource.'
    schema:
      $ref: '#/definitions/ClientError'
  PermissionDenied:
    description: The request was denied.
    schema:
      $ref: '#/definitions/ClientError'
  ServerError:
    description: A server error occurred.
    schema:
      $ref: '#/definitions/Error'
  PreconditionFailed:
    description: Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.
    schema:
      $ref: '#/definitions/ClientError'
  UnprocessableEntity:
    description: The payload was unprocessable.
    schema:
      $ref: '#/definitions/ValidationError'
